const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/chunk-wOcpDUv_.js","assets/chunks/chunk-jf7qf9Hq.js","assets/chunks/chunk-BoBl0txT.js","assets/static/vike-react-9c9f96f4.BcWtY8Ol.css","assets/static/layouts_style-b34a8e57.D9vI9OMK.css","assets/static/layouts_panda-c5b34b81.B5QjTbj1.css"])))=>i.map(i=>d[i]);
import{H as E,l as fe,be as Ge,aD as ae,x as re,az as V,a4 as Oe,Y as Z,ax as Ue,bf as Se,M as F,ay as qe,bg as ze,bh as Le,ac as be,ad as Te,bi as He,bj as $,ab as De,A as h,bk as $e,aX as Ve,O as L,aa as je,K as ee,N as we,P as he,bl as Ke,bm as Qe,bn as We,bo as Xe,bp as Ye,bq as Je,br as ge,bs as Ze,bt as xe,bu as et,bv as se,ap as X,bw as tt,bx as nt,by as ie,v as at,X as rt,bz as st,bA as it,bB as ot,bC as ut,aI as pt,bD as dt,aL as yt,bE as q,C as ct,aC as lt,bF as mt,bG as Ie,bH as te,aV as ve,bI as ke,bJ as ft,bK as bt,bL as Tt,bM as oe,b1 as ue,bN as wt}from"./chunk-jf7qf9Hq.js";import{_ as ht}from"./chunk-BoBl0txT.js";class Ce extends E{constructor({docsPath:t}={}){super(["Could not find an Account to execute with this Action.","Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client."].join(`
`),{docsPath:t,docsSlug:"account",name:"AccountNotFoundError"})}}class j extends E{constructor({docsPath:t,metaMessages:n,type:a}){super(`Account type "${a}" is not supported.`,{docsPath:t,metaMessages:n,name:"AccountTypeNotSupportedError"})}}function gt(e){const t=fe(`0x${e.substring(4)}`).substring(26);return Ge(`0x${t}`)}async function xt({hash:e,signature:t}){const n=ae(e)?e:re(e),{secp256k1:a}=await ht(async()=>{const{secp256k1:i}=await import("./chunk-wOcpDUv_.js");return{secp256k1:i}},__vite__mapDeps([0,1,2,3,4,5]));return`0x${(()=>{if(typeof t=="object"&&"r"in t&&"s"in t){const{r:o,s:l,v:d,yParity:p}=t,f=Number(p??d),m=pe(f);return new a.Signature(V(o),V(l)).addRecoveryBit(m)}const i=ae(t)?t:re(t);if(Oe(i)!==65)throw new Error("invalid signature length");const y=Z(`0x${i.slice(130)}`),u=pe(y);return a.Signature.fromCompact(i.substring(2,130)).addRecoveryBit(u)})().recoverPublicKey(n.substring(2)).toHex(!1)}`}function pe(e){if(e===0||e===1)return e;if(e===27)return 0;if(e===28)return 1;throw new Error("Invalid yParityOrV value")}async function It({hash:e,signature:t}){return gt(await xt({hash:e,signature:t}))}function vt(e){const{chainId:t,nonce:n,to:a}=e,r=e.contractAddress??e.address,s=fe(Ue(["0x05",Se([t?F(t):"0x",r,n?F(n):"0x"])]));return a==="bytes"?qe(s):s}async function Pe(e){const{authorization:t,signature:n}=e;return It({hash:vt(t),signature:n??t})}function kt({chain:e,currentChainId:t}){if(!e)throw new ze;if(t!==e.id)throw new Le({chain:e,currentChainId:t})}function Ct(e,{docsPath:t,...n}){const a=(()=>{const r=be(e,n);return r instanceof Te?e:r})();return new He(a,{docsPath:t,...n})}async function Fe(e){const t=await e.request({method:"eth_chainId"},{dedupe:!0});return Z(t)}class Pt extends E{constructor(){super("`baseFeeMultiplier` must be greater than 1.",{name:"BaseFeeScalarError"})}}class ne extends E{constructor(){super("Chain does not support EIP-1559 fees.",{name:"Eip1559FeesNotSupportedError"})}}class Ft extends E{constructor({maxPriorityFeePerGas:t}){super(`\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${$(t)} gwei).`,{name:"MaxFeePerGasTooLowError"})}}class Me extends E{constructor({blockHash:t,blockNumber:n}){let a="Block";t&&(a=`Block at hash "${t}"`),n&&(a=`Block at number "${n}"`),super(`${a} could not be found.`,{name:"BlockNotFoundError"})}}async function z(e,{blockHash:t,blockNumber:n,blockTag:a,includeTransactions:r}={}){var l,d,p;const s=a??"latest",i=r??!1,y=n!==void 0?F(n):void 0;let u=null;if(t?u=await e.request({method:"eth_getBlockByHash",params:[t,i]},{dedupe:!0}):u=await e.request({method:"eth_getBlockByNumber",params:[y||s,i]},{dedupe:!!y}),!u)throw new Me({blockHash:t,blockNumber:n});return(((p=(d=(l=e.chain)==null?void 0:l.formatters)==null?void 0:d.block)==null?void 0:p.format)||De)(u)}async function Ee(e){const t=await e.request({method:"eth_gasPrice"});return BigInt(t)}async function sn(e,t){return Be(e,t)}async function Be(e,t){var s,i;const{block:n,chain:a=e.chain,request:r}=t||{};try{const y=((s=a==null?void 0:a.fees)==null?void 0:s.maxPriorityFeePerGas)??((i=a==null?void 0:a.fees)==null?void 0:i.defaultPriorityFee);if(typeof y=="function"){const o=n||await h(e,z,"getBlock")({}),l=await y({block:o,client:e,request:r});if(l===null)throw new Error;return l}if(typeof y<"u")return y;const u=await e.request({method:"eth_maxPriorityFeePerGas"});return V(u)}catch{const[y,u]=await Promise.all([n?Promise.resolve(n):h(e,z,"getBlock")({}),h(e,Ee,"getGasPrice")({})]);if(typeof y.baseFeePerGas!="bigint")throw new ne;const o=u-y.baseFeePerGas;return o<0n?0n:o}}async function on(e,t){return Y(e,t)}async function Y(e,t){var p,f;const{block:n,chain:a=e.chain,request:r,type:s="eip1559"}=t||{},i=await(async()=>{var m,b;return typeof((m=a==null?void 0:a.fees)==null?void 0:m.baseFeeMultiplier)=="function"?a.fees.baseFeeMultiplier({block:n,client:e,request:r}):((b=a==null?void 0:a.fees)==null?void 0:b.baseFeeMultiplier)??1.2})();if(i<1)throw new Pt;const u=10**(((p=i.toString().split(".")[1])==null?void 0:p.length)??0),o=m=>m*BigInt(Math.ceil(i*u))/BigInt(u),l=n||await h(e,z,"getBlock")({});if(typeof((f=a==null?void 0:a.fees)==null?void 0:f.estimateFeesPerGas)=="function"){const m=await a.fees.estimateFeesPerGas({block:n,client:e,multiply:o,request:r,type:s});if(m!==null)return m}if(s==="eip1559"){if(typeof l.baseFeePerGas!="bigint")throw new ne;const m=typeof(r==null?void 0:r.maxPriorityFeePerGas)=="bigint"?r.maxPriorityFeePerGas:await Be(e,{block:l,chain:a,request:r}),b=o(l.baseFeePerGas);return{maxFeePerGas:(r==null?void 0:r.maxFeePerGas)??b+m,maxPriorityFeePerGas:m}}return{gasPrice:(r==null?void 0:r.gasPrice)??o(await h(e,Ee,"getGasPrice")({}))}}class Mt extends E{constructor(t,{account:n,docsPath:a,chain:r,data:s,gas:i,gasPrice:y,maxFeePerGas:u,maxPriorityFeePerGas:o,nonce:l,to:d,value:p}){var m;const f=$e({from:n==null?void 0:n.address,to:d,value:typeof p<"u"&&`${Ve(p)} ${((m=r==null?void 0:r.nativeCurrency)==null?void 0:m.symbol)||"ETH"}`,data:s,gas:i,gasPrice:typeof y<"u"&&`${$(y)} gwei`,maxFeePerGas:typeof u<"u"&&`${$(u)} gwei`,maxPriorityFeePerGas:typeof o<"u"&&`${$(o)} gwei`,nonce:l});super(t.shortMessage,{cause:t,docsPath:a,metaMessages:[...t.metaMessages?[...t.metaMessages," "]:[],"Estimate Gas Arguments:",f].filter(Boolean),name:"EstimateGasExecutionError"}),Object.defineProperty(this,"cause",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.cause=t}}function Et(e,{docsPath:t,...n}){const a=(()=>{const r=be(e,n);return r instanceof Te?e:r})();return new Mt(a,{docsPath:t,...n})}async function Bt(e,{address:t,blockNumber:n,blockTag:a="latest"}){const r=typeof n=="bigint"?F(n):void 0,s=await e.request({method:"eth_getBalance",params:[t,r||a]});return BigInt(s)}async function At(e,t){var r,s,i;const{account:n=e.account}=t,a=n?L(n):void 0;try{let M=function(A){const{block:U,request:N,rpcStateOverride:G}=A;return e.request({method:"eth_estimateGas",params:G?[N,U??"latest",G]:U?[N,U]:[N]})};const{accessList:y,authorizationList:u,blobs:o,blobVersionedHashes:l,blockNumber:d,blockTag:p,data:f,gas:m,gasPrice:b,maxFeePerBlobGas:I,maxFeePerGas:c,maxPriorityFeePerGas:T,nonce:w,value:R,stateOverride:P,...g}=await Ne(e,{...t,parameters:(a==null?void 0:a.type)==="local"?void 0:["blobVersionedHashes"]}),C=(typeof d=="bigint"?F(d):void 0)||p,x=je(P),B=await(async()=>{if(g.to)return g.to;if(u&&u.length>0)return await Pe({authorization:u[0]}).catch(()=>{throw new E("`to` is required. Could not infer from `authorizationList`")})})();ee(t);const k=(i=(s=(r=e.chain)==null?void 0:r.formatters)==null?void 0:s.transactionRequest)==null?void 0:i.format,O=(k||we)({...he(g,{format:k}),from:a==null?void 0:a.address,accessList:y,authorizationList:u,blobs:o,blobVersionedHashes:l,data:f,gas:m,gasPrice:b,maxFeePerBlobGas:I,maxFeePerGas:c,maxPriorityFeePerGas:T,nonce:w,to:B,value:R});let _=BigInt(await M({block:C,request:O,rpcStateOverride:x}));if(u){const A=await Bt(e,{address:O.from}),U=await Promise.all(u.map(async N=>{const{address:G}=N,_e=await M({block:C,request:{authorizationList:void 0,data:f,from:a==null?void 0:a.address,to:G,value:F(A)},rpcStateOverride:x}).catch(()=>100000n);return 2n*BigInt(_e)}));_+=U.reduce((N,G)=>N+G,0n)}return _}catch(y){throw Et(y,{...t,account:a,chain:e.chain})}}async function Nt(e,{address:t,blockTag:n="latest",blockNumber:a}){const r=await e.request({method:"eth_getTransactionCount",params:[t,typeof a=="bigint"?F(a):n]},{dedupe:!!a});return Z(r)}const Ae=["blobVersionedHashes","chainId","fees","gas","nonce","type"],de=new Map;async function Ne(e,t){const{account:n=e.account,blobs:a,chain:r,gas:s,kzg:i,nonce:y,nonceManager:u,parameters:o=Ae,type:l}=t,d=n&&L(n),p={...t,...d?{from:d==null?void 0:d.address}:{}};let f;async function m(){return f||(f=await h(e,z,"getBlock")({blockTag:"latest"}),f)}let b;async function I(){return b||(r?r.id:typeof t.chainId<"u"?t.chainId:(b=await h(e,Fe,"getChainId")({}),b))}if(o.includes("nonce")&&typeof y>"u"&&d)if(u){const c=await I();p.nonce=await u.consume({address:d.address,chainId:c,client:e})}else p.nonce=await h(e,Nt,"getTransactionCount")({address:d.address,blockTag:"pending"});if((o.includes("blobVersionedHashes")||o.includes("sidecars"))&&a&&i){const c=Ke({blobs:a,kzg:i});if(o.includes("blobVersionedHashes")){const T=Qe({commitments:c,to:"hex"});p.blobVersionedHashes=T}if(o.includes("sidecars")){const T=We({blobs:a,commitments:c,kzg:i}),w=Xe({blobs:a,commitments:c,proofs:T,to:"hex"});p.sidecars=w}}if(o.includes("chainId")&&(p.chainId=await I()),(o.includes("fees")||o.includes("type"))&&typeof l>"u")try{p.type=Ye(p)}catch{let c=de.get(e.uid);if(typeof c>"u"){const T=await m();c=typeof(T==null?void 0:T.baseFeePerGas)=="bigint",de.set(e.uid,c)}p.type=c?"eip1559":"legacy"}if(o.includes("fees"))if(p.type!=="legacy"&&p.type!=="eip2930"){if(typeof p.maxFeePerGas>"u"||typeof p.maxPriorityFeePerGas>"u"){const c=await m(),{maxFeePerGas:T,maxPriorityFeePerGas:w}=await Y(e,{block:c,chain:r,request:p});if(typeof t.maxPriorityFeePerGas>"u"&&t.maxFeePerGas&&t.maxFeePerGas<w)throw new Ft({maxPriorityFeePerGas:w});p.maxPriorityFeePerGas=w,p.maxFeePerGas=T}}else{if(typeof t.maxFeePerGas<"u"||typeof t.maxPriorityFeePerGas<"u")throw new ne;if(typeof t.gasPrice>"u"){const c=await m(),{gasPrice:T}=await Y(e,{block:c,chain:r,request:p,type:"legacy"});p.gasPrice=T}}return o.includes("gas")&&typeof s>"u"&&(p.gas=await h(e,At,"estimateGas")({...p,account:d&&{address:d.address,type:"json-rpc"}})),ee(p),delete p.parameters,p}async function Rt(e,{serializedTransaction:t}){return e.request({method:"eth_sendRawTransaction",params:[t]},{retryCount:0})}const K=new Je(128);async function _t(e,t){var T,w,R,P;const{account:n=e.account,chain:a=e.chain,accessList:r,authorizationList:s,blobs:i,data:y,gas:u,gasPrice:o,maxFeePerBlobGas:l,maxFeePerGas:d,maxPriorityFeePerGas:p,nonce:f,type:m,value:b,...I}=t;if(typeof n>"u")throw new Ce({docsPath:"/docs/actions/wallet/sendTransaction"});const c=n?L(n):null;try{ee(t);const g=await(async()=>{if(t.to)return t.to;if(t.to!==null&&s&&s.length>0)return await Pe({authorization:s[0]}).catch(()=>{throw new E("`to` is required. Could not infer from `authorizationList`.")})})();if((c==null?void 0:c.type)==="json-rpc"||c===null){let v;a!==null&&(v=await h(e,Fe,"getChainId")({}),kt({currentChainId:v,chain:a}));const C=(R=(w=(T=e.chain)==null?void 0:T.formatters)==null?void 0:w.transactionRequest)==null?void 0:R.format,B=(C||we)({...he(I,{format:C}),accessList:r,authorizationList:s,blobs:i,chainId:v,data:y,from:c==null?void 0:c.address,gas:u,gasPrice:o,maxFeePerBlobGas:l,maxFeePerGas:d,maxPriorityFeePerGas:p,nonce:f,to:g,type:m,value:b}),k=K.get(e.uid),H=k?"wallet_sendTransaction":"eth_sendTransaction";try{return await e.request({method:H,params:[B]},{retryCount:0})}catch(O){if(k===!1)throw O;const M=O;if(M.name==="InvalidInputRpcError"||M.name==="InvalidParamsRpcError"||M.name==="MethodNotFoundRpcError"||M.name==="MethodNotSupportedRpcError")return await e.request({method:"wallet_sendTransaction",params:[B]},{retryCount:0}).then(_=>(K.set(e.uid,!0),_)).catch(_=>{const A=_;throw A.name==="MethodNotFoundRpcError"||A.name==="MethodNotSupportedRpcError"?(K.set(e.uid,!1),M):A});throw M}}if((c==null?void 0:c.type)==="local"){const v=await h(e,Ne,"prepareTransactionRequest")({account:c,accessList:r,authorizationList:s,blobs:i,chain:a,data:y,gas:u,gasPrice:o,maxFeePerBlobGas:l,maxFeePerGas:d,maxPriorityFeePerGas:p,nonce:f,nonceManager:c.nonceManager,parameters:[...Ae,"sidecars"],type:m,value:b,...I,to:g}),C=(P=a==null?void 0:a.serializers)==null?void 0:P.transaction,x=await c.signTransaction(v,{serializer:C});return await h(e,Rt,"sendRawTransaction")({serializedTransaction:x})}throw(c==null?void 0:c.type)==="smart"?new j({metaMessages:["Consider using the `sendUserOperation` Action instead."],docsPath:"/docs/actions/bundler/sendUserOperation",type:"smart"}):new j({docsPath:"/docs/actions/wallet/sendTransaction",type:c==null?void 0:c.type})}catch(g){throw g instanceof j?g:Ct(g,{...t,account:c,chain:t.chain||void 0})}}const Gt=new Map,Ot=new Map;function Ut(e){const t=(r,s)=>({clear:()=>s.delete(r),get:()=>s.get(r),set:i=>s.set(r,i)}),n=t(e,Gt),a=t(e,Ot);return{clear:()=>{n.clear(),a.clear()},promise:n,response:a}}async function St(e,{cacheKey:t,cacheTime:n=Number.POSITIVE_INFINITY}){const a=Ut(t),r=a.response.get();if(r&&n>0&&new Date().getTime()-r.created.getTime()<n)return r.data;let s=a.promise.get();s||(s=e(),a.promise.set(s));try{const i=await s;return a.response.set({created:new Date,data:i}),i}finally{a.promise.clear()}}const qt=e=>`blockNumber.${e}`;async function zt(e,{cacheTime:t=e.cacheTime}={}){const n=await St(()=>e.request({method:"eth_blockNumber"}),{cacheKey:qt(e.uid),cacheTime:t});return BigInt(n)}async function Re(e,{blockHash:t,blockNumber:n,blockTag:a,hash:r,index:s}){var l,d,p;const i=a||"latest",y=n!==void 0?F(n):void 0;let u=null;if(r?u=await e.request({method:"eth_getTransactionByHash",params:[r]},{dedupe:!0}):t?u=await e.request({method:"eth_getTransactionByBlockHashAndIndex",params:[t,F(s)]},{dedupe:!0}):u=await e.request({method:"eth_getTransactionByBlockNumberAndIndex",params:[y||i,F(s)]},{dedupe:!!y}),!u)throw new ge({blockHash:t,blockNumber:n,blockTag:i,hash:r,index:s});return(((p=(d=(l=e.chain)==null?void 0:l.formatters)==null?void 0:d.transaction)==null?void 0:p.format)||Ze)(u)}async function ye(e,{hash:t}){var r,s,i;const n=await e.request({method:"eth_getTransactionReceipt",params:[t]},{dedupe:!0});if(!n)throw new xe({hash:t});return(((i=(s=(r=e.chain)==null?void 0:r.formatters)==null?void 0:s.transactionReceipt)==null?void 0:i.format)||et)(n)}const Q=new Map,ce=new Map;let Lt=0;function J(e,t,n){const a=++Lt,r=()=>Q.get(e)||[],s=()=>{const l=r();Q.set(e,l.filter(d=>d.id!==a))},i=()=>{const l=r();if(!l.some(p=>p.id===a))return;const d=ce.get(e);l.length===1&&d&&d(),s()},y=r();if(Q.set(e,[...y,{id:a,fns:t}]),y&&y.length>0)return i;const u={};for(const l in t)u[l]=(...d)=>{var f,m;const p=r();if(p.length!==0)for(const b of p)(m=(f=b.fns)[l])==null||m.call(f,...d)};const o=n(u);return typeof o=="function"&&ce.set(e,o),i}function Ht(e,{emitOnBegin:t,initialWaitTime:n,interval:a}){let r=!0;const s=()=>r=!1;return(async()=>{let y;t&&(y=await e({unpoll:s}));const u=await(n==null?void 0:n(y))??a;await se(u);const o=async()=>{r&&(await e({unpoll:s}),await se(a),o())};o()})(),s}function Dt(e,{emitOnBegin:t=!1,emitMissed:n=!1,onBlockNumber:a,onError:r,poll:s,pollingInterval:i=e.pollingInterval}){const y=typeof s<"u"?s:!(e.transport.type==="webSocket"||e.transport.type==="fallback"&&e.transport.transports[0].config.type==="webSocket");let u;return y?(()=>{const d=X(["watchBlockNumber",e.uid,t,n,i]);return J(d,{onBlockNumber:a,onError:r},p=>Ht(async()=>{var f;try{const m=await h(e,zt,"getBlockNumber")({cacheTime:0});if(u){if(m===u)return;if(m-u>1&&n)for(let b=u+1n;b<m;b++)p.onBlockNumber(b,u),u=b}(!u||m>u)&&(p.onBlockNumber(m,u),u=m)}catch(m){(f=p.onError)==null||f.call(p,m)}},{emitOnBegin:t,interval:i}))})():(()=>{const d=X(["watchBlockNumber",e.uid,t,n]);return J(d,{onBlockNumber:a,onError:r},p=>{let f=!0,m=()=>f=!1;return(async()=>{try{const b=(()=>{if(e.transport.type==="fallback"){const c=e.transport.transports.find(T=>T.config.type==="webSocket");return c?c.value:e.transport}return e.transport})(),{unsubscribe:I}=await b.subscribe({params:["newHeads"],onData(c){var w;if(!f)return;const T=V((w=c.result)==null?void 0:w.number);p.onBlockNumber(T,u),u=T},onError(c){var T;(T=p.onError)==null||T.call(p,c)}});m=I,f||m()}catch(b){r==null||r(b)}})(),()=>m()})})()}async function $t(e,{confirmations:t=1,hash:n,onReplaced:a,pollingInterval:r=e.pollingInterval,retryCount:s=6,retryDelay:i=({count:u})=>~~(1<<u)*200,timeout:y=18e4}){const u=X(["waitForTransactionReceipt",e.uid,n]);let o,l,d,p=!1,f,m;const{promise:b,resolve:I,reject:c}=tt(),T=y?setTimeout(()=>{m(),f(),c(new nt({hash:n}))},y):void 0;return f=J(u,{onReplaced:a,resolve:I,reject:c},w=>{m=h(e,Dt,"watchBlockNumber")({emitMissed:!0,emitOnBegin:!0,poll:!0,pollingInterval:r,async onBlockNumber(R){const P=v=>{clearTimeout(T),m(),v(),f()};let g=R;if(!p)try{if(d){if(t>1&&(!d.blockNumber||g-d.blockNumber+1n<t))return;P(()=>w.resolve(d));return}if(o||(p=!0,await ie(async()=>{o=await h(e,Re,"getTransaction")({hash:n}),o.blockNumber&&(g=o.blockNumber)},{delay:i,retryCount:s}),p=!1),d=await h(e,ye,"getTransactionReceipt")({hash:n}),t>1&&(!d.blockNumber||g-d.blockNumber+1n<t))return;P(()=>w.resolve(d))}catch(v){if(v instanceof ge||v instanceof xe){if(!o){p=!1;return}try{l=o,p=!0;const C=await ie(()=>h(e,z,"getBlock")({blockNumber:g,includeTransactions:!0}),{delay:i,retryCount:s,shouldRetry:({error:k})=>k instanceof Me});p=!1;const x=C.transactions.find(({from:k,nonce:H})=>k===l.from&&H===l.nonce);if(!x||(d=await h(e,ye,"getTransactionReceipt")({hash:x.hash}),t>1&&(!d.blockNumber||g-d.blockNumber+1n<t)))return;let B="replaced";x.to===l.to&&x.value===l.value&&x.input===l.input?B="repriced":x.from===x.to&&x.value===0n&&(B="cancelled"),P(()=>{var k;(k=w.onReplaced)==null||k.call(w,{reason:B,replacedTransaction:l,transaction:x,transactionReceipt:d}),w.resolve(d)})}catch(C){P(()=>w.reject(C))}}else P(()=>w.reject(v))}}})}),b}async function Vt(e,t){const{abi:n,account:a=e.account,address:r,args:s,dataSuffix:i,functionName:y,...u}=t;if(typeof a>"u")throw new Ce({docsPath:"/docs/contract/writeContract"});const o=a?L(a):null,l=at({abi:n,args:s,functionName:y});try{return await h(e,_t,"sendTransaction")({data:`${l}${i?i.replace("0x",""):""}`,to:r,account:o,...u})}catch(d){throw rt(d,{abi:n,address:r,args:s,docsPath:"/docs/contract/writeContract",functionName:y,sender:o==null?void 0:o.address})}}function jt(e,t={}){const{key:n="custom",methods:a,name:r="Custom Provider",retryDelay:s}=t;return({retryCount:i})=>st({key:n,methods:a,name:r,request:e.request.bind(e),retryCount:t.retryCount??i,retryDelay:s,type:"custom"})}async function Kt(e,t={}){let n;if(t.connector){const{connector:o}=t;if(e.state.status==="reconnecting"&&!o.getAccounts&&!o.getChainId)throw new it({connector:o});const[l,d]=await Promise.all([o.getAccounts().catch(p=>{if(t.account===null)return[];throw p}),o.getChainId()]);n={accounts:l,chainId:d,connector:o}}else n=e.state.connections.get(e.state.current);if(!n)throw new ot;const a=t.chainId??n.chainId,r=await n.connector.getChainId();if(r!==n.chainId)throw new ut({connectionChainId:n.chainId,connectorChainId:r});const s=n.connector;if(s.getClient)return s.getClient({chainId:a});const i=L(t.account??n.accounts[0]);if(i&&(i.address=pt(i.address)),t.account&&!n.accounts.some(o=>o.toLowerCase()===i.address.toLowerCase()))throw new dt({address:i.address,connector:s});const y=e.chains.find(o=>o.id===a),u=await n.connector.getProvider({chainId:a});return yt({account:i,chain:y,name:"Connector Client",transport:o=>jt(u)({...o,retryCount:0})})}function Qt(e,t){const{chainId:n,...a}=t,r=e.getClient({chainId:n});return q(r,ct,"readContract")(a)}async function Wt(e,t){const{chainId:n,timeout:a=0,...r}=t,s=e.getClient({chainId:n}),y=await q(s,$t,"waitForTransactionReceipt")({...r,timeout:a});if(y.status==="reverted"){const o=await q(s,Re,"getTransaction")({hash:y.transactionHash}),d=await q(s,lt,"call")({...o,data:o.input,gasPrice:o.type!=="eip1559"?o.gasPrice:void 0,maxFeePerGas:o.type==="eip1559"?o.maxFeePerGas:void 0,maxPriorityFeePerGas:o.type==="eip1559"?o.maxPriorityFeePerGas:void 0}),p=d!=null&&d.data?mt(`0x${d.data.substring(138)}`):"unknown reason";throw new Error(p)}return{...y,chainId:s.chain.id}}async function Xt(e,t){const{account:n,chainId:a,connector:r,...s}=t;let i;return typeof n=="object"&&(n==null?void 0:n.type)==="local"?i=e.getClient({chainId:a}):i=await Kt(e,{account:n??void 0,chainId:a,connector:r}),await q(i,Vt,"writeContract")({...s,...n?{account:n}:{},chain:a?{id:a}:null})}function Yt(e,t={}){return{async queryFn({queryKey:n}){const a=t.abi;if(!a)throw new Error("abi is required");const{functionName:r,scopeKey:s,...i}=n[1],y=(()=>{const u=n[1];if(u.address)return{address:u.address};if(u.code)return{code:u.code};throw new Error("address or code is required")})();if(!r)throw new Error("functionName is required");return Qt(e,{abi:a,functionName:r,args:i.args,...y,...i})},queryKey:Jt(t)}}function Jt(e={}){const{abi:t,...n}=e;return["readContract",Ie(n)]}function Zt(e,t={}){return{async queryFn({queryKey:n}){const{hash:a,...r}=n[1];if(!a)throw new Error("hash is required");return Wt(e,{...r,onReplaced:t.onReplaced,hash:a})},queryKey:en(t)}}function en(e={}){const{onReplaced:t,...n}=e;return["waitForTransactionReceipt",Ie(n)]}function tn(e){return{mutationFn(t){return Xt(e,t)},mutationKey:["writeContract"]}}function un(e={}){const{abi:t,address:n,functionName:a,query:r={}}=e,s=e.code,i=te(e),y=ve({config:i}),u=Yt(i,{...e,chainId:e.chainId??y}),o=!!((n||s)&&t&&a&&(r.enabled??!0));return ke({...r,...u,enabled:o,structuralSharing:r.structuralSharing??ft})}function pn(e={}){const{hash:t,query:n={}}=e,a=te(e),r=ve({config:a}),s=Zt(a,{...e,chainId:e.chainId??r}),i=!!(t&&(n.enabled??!0));return ke({...n,...s,enabled:i})}function dn(e={}){const{mutation:t}=e,n=te(e),a=tn(n),{mutate:r,mutateAsync:s,...i}=bt({...t,...a});return{...i,writeContract:r,writeContractAsync:s}}const S=11155111,nn=Tt({...oe,id:11155420,name:"OP Sepolia",nativeCurrency:{name:"Sepolia Ether",symbol:"ETH",decimals:18},rpcUrls:{default:{http:["https://sepolia.optimism.io"]}},blockExplorers:{default:{name:"Blockscout",url:"https://optimism-sepolia.blockscout.com",apiUrl:"https://optimism-sepolia.blockscout.com/api"}},contracts:{...oe.contracts,disputeGameFactory:{[S]:{address:"0x05F9613aDB30026FFd634f38e5C4dFd30a197Fa1"}},l2OutputOracle:{[S]:{address:"0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F"}},multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:1620204},portal:{[S]:{address:"0x16Fc5058F25648194471939df75CF27A2fdC48BC"}},l1StandardBridge:{[S]:{address:"0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1"}}},testnet:!0,sourceId:S}),D=[{inputs:[{internalType:"address",name:"target",type:"address"}],name:"AddressEmptyCode",type:"error"},{inputs:[{internalType:"address",name:"implementation",type:"address"}],name:"ERC1967InvalidImplementation",type:"error"},{inputs:[],name:"ERC1967NonPayable",type:"error"},{inputs:[],name:"ERC721EnumerableForbiddenBatchMint",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],name:"ERC721IncorrectOwner",type:"error"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ERC721InsufficientApproval",type:"error"},{inputs:[{internalType:"address",name:"approver",type:"address"}],name:"ERC721InvalidApprover",type:"error"},{inputs:[{internalType:"address",name:"operator",type:"address"}],name:"ERC721InvalidOperator",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"ERC721InvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"ERC721InvalidReceiver",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"}],name:"ERC721InvalidSender",type:"error"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ERC721NonexistentToken",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"ERC721OutOfBoundsIndex",type:"error"},{inputs:[],name:"FailedCall",type:"error"},{inputs:[],name:"InvalidInitialization",type:"error"},{inputs:[],name:"NotInitializing",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"OwnableInvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"OwnableUnauthorizedAccount",type:"error"},{inputs:[],name:"UUPSUnauthorizedCallContext",type:"error"},{inputs:[{internalType:"bytes32",name:"slot",type:"bytes32"}],name:"UUPSUnsupportedProxiableUUID",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_fromTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_toTokenId",type:"uint256"}],name:"BatchMetadataUpdate",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"collectorTokenId",type:"uint256"},{indexed:!0,internalType:"uint256",name:"genImTokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"collector",type:"address"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"},{indexed:!1,internalType:"uint256",name:"mintNumber",type:"uint256"}],name:"CollectorNFTMinted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint64",name:"version",type:"uint64"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"MetadataUpdate",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"genImTokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"creator",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"PaymentSentToCreator",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"},{inputs:[],name:"UPGRADE_INTERFACE_VERSION",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"baseMintPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"collectorTokensByGenImToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"genImNFTContract",outputs:[{internalType:"contract IERC721",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"genImTokenId",type:"uint256"}],name:"getCollectorTokensForGenIm",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"genImTokenId",type:"uint256"}],name:"getCurrentPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"genImTokenId",type:"uint256"}],name:"getMintStats",outputs:[{internalType:"uint256",name:"mintCount",type:"uint256"},{internalType:"uint256",name:"currentPrice",type:"uint256"},{internalType:"uint256",name:"nextPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_genImNFTContract",type:"address"},{internalType:"uint256",name:"_baseMintPrice",type:"uint256"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"genImTokenId",type:"uint256"},{internalType:"string",name:"uri",type:"string"}],name:"mintCollectorNFT",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"mintCountPerGenImToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"proxiableUUID",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_baseMintPrice",type:"uint256"}],name:"setBaseMintPrice",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_genImNFTContract",type:"address"}],name:"updateGenImNFTContract",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function"}];function yn(){switch("optimism"){case"sepolia":return wt;case"optimism":return ue;case"optimismSepolia":return nn;default:return ue}}const le=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"bytes32",name:"urlHash",type:"bytes32"},{indexed:!1,internalType:"string",name:"url",type:"string"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"LikeReceived",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"donate",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"getLikesForUrl",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"urlLikes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],me=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"bytes32",name:"urlHash",type:"bytes32"},{indexed:!1,internalType:"string",name:"url",type:"string"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"LikeReceived",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"donate",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"getLikesForUrl",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"urlLikes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],W=[{inputs:[{internalType:"address",name:"target",type:"address"}],name:"AddressEmptyCode",type:"error"},{inputs:[{internalType:"address",name:"implementation",type:"address"}],name:"ERC1967InvalidImplementation",type:"error"},{inputs:[],name:"ERC1967NonPayable",type:"error"},{inputs:[],name:"ERC721EnumerableForbiddenBatchMint",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],name:"ERC721IncorrectOwner",type:"error"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ERC721InsufficientApproval",type:"error"},{inputs:[{internalType:"address",name:"approver",type:"address"}],name:"ERC721InvalidApprover",type:"error"},{inputs:[{internalType:"address",name:"operator",type:"address"}],name:"ERC721InvalidOperator",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"ERC721InvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"ERC721InvalidReceiver",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"}],name:"ERC721InvalidSender",type:"error"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ERC721NonexistentToken",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"ERC721OutOfBoundsIndex",type:"error"},{inputs:[],name:"FailedCall",type:"error"},{inputs:[],name:"InvalidInitialization",type:"error"},{inputs:[],name:"NotInitializing",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"OwnableInvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"OwnableUnauthorizedAccount",type:"error"},{inputs:[],name:"UUPSUnauthorizedCallContext",type:"error"},{inputs:[{internalType:"bytes32",name:"slot",type:"bytes32"}],name:"UUPSUnsupportedProxiableUUID",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_fromTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_toTokenId",type:"uint256"}],name:"BatchMetadataUpdate",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"updater",type:"address"},{indexed:!1,internalType:"string",name:"imageUrl",type:"string"}],name:"ImageUpdateRequested",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"updater",type:"address"}],name:"ImageUpdaterAuthorized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint64",name:"version",type:"uint64"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"MetadataUpdate",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!1,internalType:"bool",name:"isListed",type:"bool"}],name:"TokenListingChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"updater",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"UpdaterPaid",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"},{inputs:[],name:"UPGRADE_INTERFACE_VERSION",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getAllPublicTokens",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getAuthorizedImageUpdater",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"getPublicTokensOfOwner",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"isImageUpdated",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"isTokenListed",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"mintPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"proxiableUUID",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"reinitializeV3",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"string",name:"imageUrl",type:"string"}],name:"requestImageUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"uri",type:"string"},{internalType:"bool",name:"isListed",type:"bool"}],name:"safeMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"string",name:"uri",type:"string"}],name:"safeMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newPrice",type:"uint256"}],name:"setMintPrice",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"tokenIds",type:"uint256[]"},{internalType:"bool",name:"isListed",type:"bool"}],name:"setMultipleTokensListed",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bool",name:"isListed",type:"bool"}],name:"setTokenListed",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}];function cn(){switch("optimism"){case"sepolia":return{address:"0xf18E3901D91D8a08380E37A466E6F7f6AA4BD4a6",abi:W};case"optimism":return{address:"0x80f95d330417a4acEfEA415FE9eE28db7A0A1Cdb",abi:W};default:return{address:"0x80f95d330417a4acEfEA415FE9eE28db7A0A1Cdb",abi:W}}}function ln(){switch("optimism"){case"sepolia":return{address:"0xf137ca5dc45e3d0336ac2daa26084b0eaf244684",abi:le};case"optimism":return{address:"0x314B07fBd33A7343479e99E6682D5Ee1da7F17c1",abi:me};case"optimismSepolia":return{address:"0x314B07fBd33A7343479e99E6682D5Ee1da7F17c1",abi:le};default:return{address:"0x314B07fBd33A7343479e99E6682D5Ee1da7F17c1",abi:me}}}function mn(){switch("optimism"){case"sepolia":return{address:"0x0000000000000000000000000000000000000000",abi:D};case"optimism":return{address:"0xca17B4AB53540470C19658D5B46c6B1a4A17dAA5",abi:D};case"optimismSepolia":return{address:"0x0000000000000000000000000000000000000000",abi:D};default:return{address:"0xca17B4AB53540470C19658D5B46c6B1a4A17dAA5",abi:D}}}export{Re as a,z as b,$t as c,Ne as d,At as e,ye as f,zt as g,Nt as h,sn as i,Ee as j,on as k,Fe as l,Bt as m,yn as n,J as o,Ht as p,cn as q,It as r,Rt as s,dn as t,un as u,pn as v,Dt as w,mn as x,Qt as y,ln as z};
