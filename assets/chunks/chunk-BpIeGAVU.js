const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/chunk-CbXDQnsY.js","assets/chunks/chunk-Dv2Fn-IZ.js","assets/chunks/chunk-CT5atk_u.js","assets/static/vike-react-9c9f96f4.BcWtY8Ol.css","assets/static/layouts_style-b34a8e57.D8B4iL9t.css","assets/static/layouts_panda-c5b34b81.BrtfWfHu.css"])))=>i.map(i=>d[i]);
import{b5 as ye,b6 as Ae,D as ae,M as re,b7 as H,b8 as Be,b9 as Z,ba as Re,bb as _e,bc as M,bd as Oe,B as E,be as Ge,bf as D,Q as Se,bg as ce,bh as le,bi as Ue,bj as T,J as U,bk as qe,bl as Le,bm as ze,bn as De,bo as He,bp as ee,bq as $e,br as me,bs as fe,bt as Ve,bu as je,bv as Ke,bw as be,bx as Qe,by as Te,bz as We,bA as ie,v as J,bB as Je,bC as Ye,bD as se,bE as Xe,bF as Ze,bG as et,bH as tt,bI as nt,bJ as at,bK as rt,bL as it,bM as st,bN as ot,N as G,bO as ut,z as pt,bP as dt,bQ as we,O as te,aV as he,bR as ge,bS as yt,P as ct,bT as oe,bU as lt,bV as mt}from"./chunk-Dv2Fn-IZ.js";import{_ as ft}from"./chunk-CT5atk_u.js";function bt(e){const t=ye(`0x${e.substring(4)}`).substring(26);return Ae(`0x${t}`)}async function Tt({hash:e,signature:t}){const n=ae(e)?e:re(e),{secp256k1:a}=await ft(async()=>{const{secp256k1:s}=await import("./chunk-CbXDQnsY.js");return{secp256k1:s}},__vite__mapDeps([0,1,2,3,4,5]));return`0x${(()=>{if(typeof t=="object"&&"r"in t&&"s"in t){const{r:u,s:m,v:c,yParity:o}=t,y=Number(o??c),f=ue(y);return new a.Signature(H(u),H(m)).addRecoveryBit(f)}const s=ae(t)?t:re(t);if(Be(s)!==65)throw new Error("invalid signature length");const d=Z(`0x${s.slice(130)}`),p=ue(d);return a.Signature.fromCompact(s.substring(2,130)).addRecoveryBit(p)})().recoverPublicKey(n.substring(2)).toHex(!1)}`}function ue(e){if(e===0||e===1)return e;if(e===27)return 0;if(e===28)return 1;throw new Error("Invalid yParityOrV value")}async function wt({hash:e,signature:t}){return bt(await Tt({hash:e,signature:t}))}function ht(e){const{chainId:t,nonce:n,to:a}=e,r=e.contractAddress??e.address,i=ye(Re(["0x05",_e([t?M(t):"0x",r,n?M(n):"0x"])]));return a==="bytes"?Oe(i):i}async function ve(e){const{authorization:t,signature:n}=e;return wt({hash:ht(t),signature:n??t})}class gt extends E{constructor(t,{account:n,docsPath:a,chain:r,data:i,gas:s,gasPrice:d,maxFeePerGas:p,maxPriorityFeePerGas:u,nonce:m,to:c,value:o}){const y=Ge({from:n?.address,to:c,value:typeof o<"u"&&`${Se(o)} ${r?.nativeCurrency?.symbol||"ETH"}`,data:i,gas:s,gasPrice:typeof d<"u"&&`${D(d)} gwei`,maxFeePerGas:typeof p<"u"&&`${D(p)} gwei`,maxPriorityFeePerGas:typeof u<"u"&&`${D(u)} gwei`,nonce:m});super(t.shortMessage,{cause:t,docsPath:a,metaMessages:[...t.metaMessages?[...t.metaMessages," "]:[],"Estimate Gas Arguments:",y].filter(Boolean),name:"EstimateGasExecutionError"}),Object.defineProperty(this,"cause",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.cause=t}}function vt(e,{docsPath:t,...n}){const a=(()=>{const r=ce(e,n);return r instanceof le?e:r})();return new gt(a,{docsPath:t,...n})}class It extends E{constructor(){super("`baseFeeMultiplier` must be greater than 1.",{name:"BaseFeeScalarError"})}}class ne extends E{constructor(){super("Chain does not support EIP-1559 fees.",{name:"Eip1559FeesNotSupportedError"})}}class xt extends E{constructor({maxPriorityFeePerGas:t}){super(`\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${D(t)} gwei).`,{name:"MaxFeePerGasTooLowError"})}}class Ie extends E{constructor({blockHash:t,blockNumber:n}){let a="Block";t&&(a=`Block at hash "${t}"`),n&&(a=`Block at number "${n}"`),super(`${a} could not be found.`,{name:"BlockNotFoundError"})}}async function S(e,{blockHash:t,blockNumber:n,blockTag:a=e.experimental_blockTag??"latest",includeTransactions:r}={}){const i=r??!1,s=n!==void 0?M(n):void 0;let d=null;if(t?d=await e.request({method:"eth_getBlockByHash",params:[t,i]},{dedupe:!0}):d=await e.request({method:"eth_getBlockByNumber",params:[s||a,i]},{dedupe:!!s}),!d)throw new Ie({blockHash:t,blockNumber:n});return(e.chain?.formatters?.block?.format||Ue)(d)}async function xe(e){const t=await e.request({method:"eth_gasPrice"});return BigInt(t)}async function sn(e,t){return Ce(e,t)}async function Ce(e,t){const{block:n,chain:a=e.chain,request:r}=t||{};try{const i=a?.fees?.maxPriorityFeePerGas??a?.fees?.defaultPriorityFee;if(typeof i=="function"){const d=n||await T(e,S,"getBlock")({}),p=await i({block:d,client:e,request:r});if(p===null)throw new Error;return p}if(typeof i<"u")return i;const s=await e.request({method:"eth_maxPriorityFeePerGas"});return H(s)}catch{const[i,s]=await Promise.all([n?Promise.resolve(n):T(e,S,"getBlock")({}),T(e,xe,"getGasPrice")({})]);if(typeof i.baseFeePerGas!="bigint")throw new ne;const d=s-i.baseFeePerGas;return d<0n?0n:d}}async function on(e,t){return Y(e,t)}async function Y(e,t){const{block:n,chain:a=e.chain,request:r,type:i="eip1559"}=t||{},s=await(async()=>typeof a?.fees?.baseFeeMultiplier=="function"?a.fees.baseFeeMultiplier({block:n,client:e,request:r}):a?.fees?.baseFeeMultiplier??1.2)();if(s<1)throw new It;const p=10**(s.toString().split(".")[1]?.length??0),u=o=>o*BigInt(Math.ceil(s*p))/BigInt(p),m=n||await T(e,S,"getBlock")({});if(typeof a?.fees?.estimateFeesPerGas=="function"){const o=await a.fees.estimateFeesPerGas({block:n,client:e,multiply:u,request:r,type:i});if(o!==null)return o}if(i==="eip1559"){if(typeof m.baseFeePerGas!="bigint")throw new ne;const o=typeof r?.maxPriorityFeePerGas=="bigint"?r.maxPriorityFeePerGas:await Ce(e,{block:m,chain:a,request:r}),y=u(m.baseFeePerGas);return{maxFeePerGas:r?.maxFeePerGas??y+o,maxPriorityFeePerGas:o}}return{gasPrice:r?.gasPrice??u(await T(e,xe,"getGasPrice")({}))}}async function Ct(e,{address:t,blockTag:n="latest",blockNumber:a}){const r=await e.request({method:"eth_getTransactionCount",params:[t,typeof a=="bigint"?M(a):n]},{dedupe:!!a});return Z(r)}async function ke(e){const t=await e.request({method:"eth_chainId"},{dedupe:!0});return Z(t)}const Pe=["blobVersionedHashes","chainId","fees","gas","nonce","type"],pe=new Map;async function Me(e,t){const{account:n=e.account,blobs:a,chain:r,gas:i,kzg:s,nonce:d,nonceManager:p,parameters:u=Pe,type:m}=t,c=n&&U(n),o={...t,...c?{from:c?.address}:{}};let y;async function f(){return y||(y=await T(e,S,"getBlock")({blockTag:"latest"}),y)}let w;async function I(){return w||(r?r.id:typeof t.chainId<"u"?t.chainId:(w=await T(e,ke,"getChainId")({}),w))}if(u.includes("nonce")&&typeof d>"u"&&c)if(p){const l=await I();o.nonce=await p.consume({address:c.address,chainId:l,client:e})}else o.nonce=await T(e,Ct,"getTransactionCount")({address:c.address,blockTag:"pending"});if((u.includes("blobVersionedHashes")||u.includes("sidecars"))&&a&&s){const l=qe({blobs:a,kzg:s});if(u.includes("blobVersionedHashes")){const b=Le({commitments:l,to:"hex"});o.blobVersionedHashes=b}if(u.includes("sidecars")){const b=ze({blobs:a,commitments:l,kzg:s}),h=De({blobs:a,commitments:l,proofs:b,to:"hex"});o.sidecars=h}}if(u.includes("chainId")&&(o.chainId=await I()),(u.includes("fees")||u.includes("type"))&&typeof m>"u")try{o.type=He(o)}catch{let l=pe.get(e.uid);typeof l>"u"&&(l=typeof(await f())?.baseFeePerGas=="bigint",pe.set(e.uid,l)),o.type=l?"eip1559":"legacy"}if(u.includes("fees"))if(o.type!=="legacy"&&o.type!=="eip2930"){if(typeof o.maxFeePerGas>"u"||typeof o.maxPriorityFeePerGas>"u"){const l=await f(),{maxFeePerGas:b,maxPriorityFeePerGas:h}=await Y(e,{block:l,chain:r,request:o});if(typeof t.maxPriorityFeePerGas>"u"&&t.maxFeePerGas&&t.maxFeePerGas<h)throw new xt({maxPriorityFeePerGas:h});o.maxPriorityFeePerGas=h,o.maxFeePerGas=b}}else{if(typeof t.maxFeePerGas<"u"||typeof t.maxPriorityFeePerGas<"u")throw new ne;if(typeof t.gasPrice>"u"){const l=await f(),{gasPrice:b}=await Y(e,{block:l,chain:r,request:o,type:"legacy"});o.gasPrice=b}}return u.includes("gas")&&typeof i>"u"&&(o.gas=await T(e,Pt,"estimateGas")({...o,account:c&&{address:c.address,type:"json-rpc"}})),ee(o),delete o.parameters,o}async function kt(e,{address:t,blockNumber:n,blockTag:a=e.experimental_blockTag??"latest"}){const r=typeof n=="bigint"?M(n):void 0,i=await e.request({method:"eth_getBalance",params:[t,r||a]});return BigInt(i)}async function Pt(e,t){const{account:n=e.account}=t,a=n?U(n):void 0;try{let g=function(B){const{block:R,request:_,rpcStateOverride:O}=B;return e.request({method:"eth_estimateGas",params:O?[_,R??e.experimental_blockTag??"latest",O]:R?[_,R]:[_]})};const{accessList:r,authorizationList:i,blobs:s,blobVersionedHashes:d,blockNumber:p,blockTag:u,data:m,gas:c,gasPrice:o,maxFeePerBlobGas:y,maxFeePerGas:f,maxPriorityFeePerGas:w,nonce:I,value:l,stateOverride:b,...h}=await Me(e,{...t,parameters:a?.type==="local"?void 0:["blobVersionedHashes"]}),v=(typeof p=="bigint"?M(p):void 0)||u,A=$e(b),C=await(async()=>{if(h.to)return h.to;if(i&&i.length>0)return await ve({authorization:i[0]}).catch(()=>{throw new E("`to` is required. Could not infer from `authorizationList`")})})();ee(t);const k=e.chain?.formatters?.transactionRequest?.format,x=(k||me)({...fe(h,{format:k}),from:a?.address,accessList:r,authorizationList:i,blobs:s,blobVersionedHashes:d,data:m,gas:c,gasPrice:o,maxFeePerBlobGas:y,maxFeePerGas:f,maxPriorityFeePerGas:w,nonce:I,to:C,value:l});let P=BigInt(await g({block:v,request:x,rpcStateOverride:A}));if(i){const B=await kt(e,{address:x.from}),R=await Promise.all(i.map(async _=>{const{address:O}=_,Ne=await g({block:v,request:{authorizationList:void 0,data:m,from:a?.address,to:O,value:M(B)},rpcStateOverride:A}).catch(()=>100000n);return 2n*BigInt(Ne)}));P+=R.reduce((_,O)=>_+O,0n)}return P}catch(r){throw vt(r,{...t,account:a,chain:e.chain})}}const Mt=new Map,Ft=new Map;function Et(e){const t=(r,i)=>({clear:()=>i.delete(r),get:()=>i.get(r),set:s=>i.set(r,s)}),n=t(e,Mt),a=t(e,Ft);return{clear:()=>{n.clear(),a.clear()},promise:n,response:a}}async function Nt(e,{cacheKey:t,cacheTime:n=Number.POSITIVE_INFINITY}){const a=Et(t),r=a.response.get();if(r&&n>0&&Date.now()-r.created.getTime()<n)return r.data;let i=a.promise.get();i||(i=e(),a.promise.set(i));try{const s=await i;return a.response.set({created:new Date,data:s}),s}finally{a.promise.clear()}}const At=e=>`blockNumber.${e}`;async function Bt(e,{cacheTime:t=e.cacheTime}={}){const n=await Nt(()=>e.request({method:"eth_blockNumber"}),{cacheKey:At(e.uid),cacheTime:t});return BigInt(n)}function Rt({chain:e,currentChainId:t}){if(!e)throw new Ve;if(t!==e.id)throw new je({chain:e,currentChainId:t})}function _t(e,{docsPath:t,...n}){const a=(()=>{const r=ce(e,n);return r instanceof le?e:r})();return new Ke(a,{docsPath:t,...n})}async function Fe(e,{blockHash:t,blockNumber:n,blockTag:a,hash:r,index:i}){const s=a||"latest",d=n!==void 0?M(n):void 0;let p=null;if(r?p=await e.request({method:"eth_getTransactionByHash",params:[r]},{dedupe:!0}):t?p=await e.request({method:"eth_getTransactionByBlockHashAndIndex",params:[t,M(i)]},{dedupe:!0}):p=await e.request({method:"eth_getTransactionByBlockNumberAndIndex",params:[d||s,M(i)]},{dedupe:!!d}),!p)throw new be({blockHash:t,blockNumber:n,blockTag:s,hash:r,index:i});return(e.chain?.formatters?.transaction?.format||Qe)(p)}async function $(e,{hash:t}){const n=await e.request({method:"eth_getTransactionReceipt",params:[t]},{dedupe:!0});if(!n)throw new Te({hash:t});return(e.chain?.formatters?.transactionReceipt?.format||We)(n)}const V=new Map,de=new Map;let Ot=0;function X(e,t,n){const a=++Ot,r=()=>V.get(e)||[],i=()=>{const m=r();V.set(e,m.filter(c=>c.id!==a))},s=()=>{const m=r();if(!m.some(o=>o.id===a))return;const c=de.get(e);if(m.length===1&&c){const o=c();o instanceof Promise&&o.catch(()=>{})}i()},d=r();if(V.set(e,[...d,{id:a,fns:t}]),d&&d.length>0)return s;const p={};for(const m in t)p[m]=(...c)=>{const o=r();if(o.length!==0)for(const y of o)y.fns[m]?.(...c)};const u=n(p);return typeof u=="function"&&de.set(e,u),s}function Gt(e,{emitOnBegin:t,initialWaitTime:n,interval:a}){let r=!0;const i=()=>r=!1;return(async()=>{let d;t&&(d=await e({unpoll:i}));const p=await n?.(d)??a;await ie(p);const u=async()=>{r&&(await e({unpoll:i}),await ie(a),u())};u()})(),i}function St(e,{emitOnBegin:t=!1,emitMissed:n=!1,onBlockNumber:a,onError:r,poll:i,pollingInterval:s=e.pollingInterval}){const d=typeof i<"u"?i:!(e.transport.type==="webSocket"||e.transport.type==="ipc"||e.transport.type==="fallback"&&(e.transport.transports[0].config.type==="webSocket"||e.transport.transports[0].config.type==="ipc"));let p;return d?(()=>{const c=J(["watchBlockNumber",e.uid,t,n,s]);return X(c,{onBlockNumber:a,onError:r},o=>Gt(async()=>{try{const y=await T(e,Bt,"getBlockNumber")({cacheTime:0});if(p){if(y===p)return;if(y-p>1&&n)for(let f=p+1n;f<y;f++)o.onBlockNumber(f,p),p=f}(!p||y>p)&&(o.onBlockNumber(y,p),p=y)}catch(y){o.onError?.(y)}},{emitOnBegin:t,interval:s}))})():(()=>{const c=J(["watchBlockNumber",e.uid,t,n]);return X(c,{onBlockNumber:a,onError:r},o=>{let y=!0,f=()=>y=!1;return(async()=>{try{const w=(()=>{if(e.transport.type==="fallback"){const l=e.transport.transports.find(b=>b.config.type==="webSocket"||b.config.type==="ipc");return l?l.value:e.transport}return e.transport})(),{unsubscribe:I}=await w.subscribe({params:["newHeads"],onData(l){if(!y)return;const b=H(l.result?.number);o.onBlockNumber(b,p),p=b},onError(l){o.onError?.(l)}});f=I,y||f()}catch(w){r?.(w)}})(),()=>f()})})()}async function Ut(e,t){const{checkReplacement:n=!0,confirmations:a=1,hash:r,onReplaced:i,retryCount:s=6,retryDelay:d=({count:v})=>~~(1<<v)*200,timeout:p=18e4}=t,u=J(["waitForTransactionReceipt",e.uid,r]),m=t.pollingInterval?t.pollingInterval:e.chain?.experimental_preconfirmationTime?e.chain.experimental_preconfirmationTime:e.pollingInterval;let c,o,y,f=!1,w,I;const{promise:l,resolve:b,reject:h}=Je(),N=p?setTimeout(()=>{I?.(),w?.(),h(new Ye({hash:r}))},p):void 0;return w=X(u,{onReplaced:i,resolve:b,reject:h},async v=>{if(y=await T(e,$,"getTransactionReceipt")({hash:r}).catch(()=>{}),y&&a<=1){clearTimeout(N),v.resolve(y),w?.();return}I=T(e,St,"watchBlockNumber")({emitMissed:!0,emitOnBegin:!0,poll:!0,pollingInterval:m,async onBlockNumber(A){const C=F=>{clearTimeout(N),I?.(),F(),w?.()};let k=A;if(!f)try{if(y){if(a>1&&(!y.blockNumber||k-y.blockNumber+1n<a))return;C(()=>v.resolve(y));return}if(n&&!c&&(f=!0,await se(async()=>{c=await T(e,Fe,"getTransaction")({hash:r}),c.blockNumber&&(k=c.blockNumber)},{delay:d,retryCount:s}),f=!1),y=await T(e,$,"getTransactionReceipt")({hash:r}),a>1&&(!y.blockNumber||k-y.blockNumber+1n<a))return;C(()=>v.resolve(y))}catch(F){if(F instanceof be||F instanceof Te){if(!c){f=!1;return}try{o=c,f=!0;const x=await se(()=>T(e,S,"getBlock")({blockNumber:k,includeTransactions:!0}),{delay:d,retryCount:s,shouldRetry:({error:B})=>B instanceof Ie});f=!1;const g=x.transactions.find(({from:B,nonce:R})=>B===o.from&&R===o.nonce);if(!g||(y=await T(e,$,"getTransactionReceipt")({hash:g.hash}),a>1&&(!y.blockNumber||k-y.blockNumber+1n<a)))return;let P="replaced";g.to===o.to&&g.value===o.value&&g.input===o.input?P="repriced":g.from===g.to&&g.value===0n&&(P="cancelled"),C(()=>{v.onReplaced?.({reason:P,replacedTransaction:o,transaction:g,transactionReceipt:y}),v.resolve(y)})}catch(x){C(()=>v.reject(x))}}else C(()=>v.reject(F))}}})}),l}class Ee extends E{constructor({docsPath:t}={}){super(["Could not find an Account to execute with this Action.","Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client."].join(`
`),{docsPath:t,docsSlug:"account",name:"AccountNotFoundError"})}}class j extends E{constructor({docsPath:t,metaMessages:n,type:a}){super(`Account type "${a}" is not supported.`,{docsPath:t,metaMessages:n,name:"AccountTypeNotSupportedError"})}}async function qt(e,{serializedTransaction:t}){return e.request({method:"eth_sendRawTransaction",params:[t]},{retryCount:0})}const K=new Xe(128);async function Lt(e,t){const{account:n=e.account,chain:a=e.chain,accessList:r,authorizationList:i,blobs:s,data:d,gas:p,gasPrice:u,maxFeePerBlobGas:m,maxFeePerGas:c,maxPriorityFeePerGas:o,nonce:y,type:f,value:w,...I}=t;if(typeof n>"u")throw new Ee({docsPath:"/docs/actions/wallet/sendTransaction"});const l=n?U(n):null;try{ee(t);const b=await(async()=>{if(t.to)return t.to;if(t.to!==null&&i&&i.length>0)return await ve({authorization:i[0]}).catch(()=>{throw new E("`to` is required. Could not infer from `authorizationList`.")})})();if(l?.type==="json-rpc"||l===null){let h;a!==null&&(h=await T(e,ke,"getChainId")({}),Rt({currentChainId:h,chain:a}));const N=e.chain?.formatters?.transactionRequest?.format,A=(N||me)({...fe(I,{format:N}),accessList:r,authorizationList:i,blobs:s,chainId:h,data:d,from:l?.address,gas:p,gasPrice:u,maxFeePerBlobGas:m,maxFeePerGas:c,maxPriorityFeePerGas:o,nonce:y,to:b,type:f,value:w}),C=K.get(e.uid),k=C?"wallet_sendTransaction":"eth_sendTransaction";try{return await e.request({method:k,params:[A]},{retryCount:0})}catch(F){if(C===!1)throw F;const x=F;if(x.name==="InvalidInputRpcError"||x.name==="InvalidParamsRpcError"||x.name==="MethodNotFoundRpcError"||x.name==="MethodNotSupportedRpcError")return await e.request({method:"wallet_sendTransaction",params:[A]},{retryCount:0}).then(g=>(K.set(e.uid,!0),g)).catch(g=>{const P=g;throw P.name==="MethodNotFoundRpcError"||P.name==="MethodNotSupportedRpcError"?(K.set(e.uid,!1),x):P});throw x}}if(l?.type==="local"){const h=await T(e,Me,"prepareTransactionRequest")({account:l,accessList:r,authorizationList:i,blobs:s,chain:a,data:d,gas:p,gasPrice:u,maxFeePerBlobGas:m,maxFeePerGas:c,maxPriorityFeePerGas:o,nonce:y,nonceManager:l.nonceManager,parameters:[...Pe,"sidecars"],type:f,value:w,...I,to:b}),N=a?.serializers?.transaction,v=await l.signTransaction(h,{serializer:N});return await T(e,qt,"sendRawTransaction")({serializedTransaction:v})}throw l?.type==="smart"?new j({metaMessages:["Consider using the `sendUserOperation` Action instead."],docsPath:"/docs/actions/bundler/sendUserOperation",type:"smart"}):new j({docsPath:"/docs/actions/wallet/sendTransaction",type:l?.type})}catch(b){throw b instanceof j?b:_t(b,{...t,account:l,chain:t.chain||void 0})}}async function zt(e,t){const{abi:n,account:a=e.account,address:r,args:i,dataSuffix:s,functionName:d,...p}=t;if(typeof a>"u")throw new Ee({docsPath:"/docs/contract/writeContract"});const u=a?U(a):null,m=Ze({abi:n,args:i,functionName:d});try{return await T(e,Lt,"sendTransaction")({data:`${m}${s?s.replace("0x",""):""}`,to:r,account:u,...p})}catch(c){throw et(c,{abi:n,address:r,args:i,docsPath:"/docs/contract/writeContract",functionName:d,sender:u?.address})}}function Dt(e,t={}){const{key:n="custom",methods:a,name:r="Custom Provider",retryDelay:i}=t;return({retryCount:s})=>tt({key:n,methods:a,name:r,request:e.request.bind(e),retryCount:t.retryCount??s,retryDelay:i,type:"custom"})}async function Ht(e,t={}){let n;if(t.connector){const{connector:u}=t;if(e.state.status==="reconnecting"&&!u.getAccounts&&!u.getChainId)throw new nt({connector:u});const[m,c]=await Promise.all([u.getAccounts().catch(o=>{if(t.account===null)return[];throw o}),u.getChainId()]);n={accounts:m,chainId:c,connector:u}}else n=e.state.connections.get(e.state.current);if(!n)throw new at;const a=t.chainId??n.chainId,r=await n.connector.getChainId();if(r!==a)throw new rt({connectionChainId:a,connectorChainId:r});const i=n.connector;if(i.getClient)return i.getClient({chainId:a});const s=U(t.account??n.accounts[0]);if(s&&(s.address=it(s.address)),t.account&&!n.accounts.some(u=>u.toLowerCase()===s.address.toLowerCase()))throw new st({address:s.address,connector:i});const d=e.chains.find(u=>u.id===a),p=await n.connector.getProvider({chainId:a});return ot({account:s,chain:d,name:"Connector Client",transport:u=>Dt(p)({...u,retryCount:0})})}function $t(e,t){const{chainId:n,...a}=t,r=e.getClient({chainId:n});return G(r,ut,"readContract")(a)}async function Vt(e,t){const{chainId:n,timeout:a=0,...r}=t,i=e.getClient({chainId:n}),d=await G(i,Ut,"waitForTransactionReceipt")({...r,timeout:a});if(d.status==="reverted"){const u=await G(i,Fe,"getTransaction")({hash:d.transactionHash}),c=await G(i,pt,"call")({...u,data:u.input,gasPrice:u.type!=="eip1559"?u.gasPrice:void 0,maxFeePerGas:u.type==="eip1559"?u.maxFeePerGas:void 0,maxPriorityFeePerGas:u.type==="eip1559"?u.maxPriorityFeePerGas:void 0}),o=c?.data?dt(`0x${c.data.substring(138)}`):"unknown reason";throw new Error(o)}return{...d,chainId:i.chain.id}}async function jt(e,t){const{account:n,chainId:a,connector:r,...i}=t;let s;return typeof n=="object"&&n?.type==="local"?s=e.getClient({chainId:a}):s=await Ht(e,{account:n??void 0,chainId:a,connector:r}),await G(s,zt,"writeContract")({...i,...n?{account:n}:{},chain:a?{id:a}:null})}function Kt(e,t={}){return{async queryFn({queryKey:n}){const a=t.abi;if(!a)throw new Error("abi is required");const{functionName:r,scopeKey:i,...s}=n[1],d=(()=>{const p=n[1];if(p.address)return{address:p.address};if(p.code)return{code:p.code};throw new Error("address or code is required")})();if(!r)throw new Error("functionName is required");return $t(e,{abi:a,functionName:r,args:s.args,...d,...s})},queryKey:Qt(t)}}function Qt(e={}){const{abi:t,...n}=e;return["readContract",we(n)]}function Wt(e,t={}){return{async queryFn({queryKey:n}){const{hash:a,...r}=n[1];if(!a)throw new Error("hash is required");return Vt(e,{...r,onReplaced:t.onReplaced,hash:a})},queryKey:Jt(t)}}function Jt(e={}){const{onReplaced:t,...n}=e;return["waitForTransactionReceipt",we(n)]}function Yt(e){return{mutationFn(t){return jt(e,t)},mutationKey:["writeContract"]}}function un(e={}){const{abi:t,address:n,functionName:a,query:r={}}=e,i=e.code,s=te(e),d=he({config:s}),p=Kt(s,{...e,chainId:e.chainId??d}),u=!!((n||i)&&t&&a&&(r.enabled??!0));return ge({...r,...p,enabled:u,structuralSharing:r.structuralSharing??yt})}function pn(e={}){const{hash:t,query:n={}}=e,a=te(e),r=he({config:a}),i=Wt(a,{...e,chainId:e.chainId??r}),s=!!(t&&(n.enabled??!0));return ge({...n,...i,enabled:s})}function dn(e={}){const{mutation:t}=e,n=te(e),a=Yt(n),{mutate:r,mutateAsync:i,...s}=ct({...t,...a});return{...s,writeContract:r,writeContractAsync:i}}const L=JSON.parse('[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"GenImTokenNotFound","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"GenImTokenNotListed","type":"error"},{"inputs":[{"internalType":"uint256","name":"required","type":"uint256"},{"internalType":"uint256","name":"provided","type":"uint256"}],"name":"InsufficientPayment","type":"error"},{"inputs":[],"name":"InvalidGenImNFTContract","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"PaymentToCreatorFailed","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"RefundFailed","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"collectorTokenId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"genImTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"collector","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"mintNumber","type":"uint256"}],"name":"CollectorNFTMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"genImNFTContract","type":"address"},{"indexed":false,"internalType":"uint256","name":"baseMintPrice","type":"uint256"}],"name":"ContractInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"genImTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PaymentSentToCreator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseMintPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"collectorToGenImToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"collectorTokensByGenImToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"genImNFTContract","outputs":[{"internalType":"contract IGenImNFTWithListing","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"genImTokenId","type":"uint256"}],"name":"getCollectorTokensForGenIm","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"genImTokenId","type":"uint256"}],"name":"getCurrentPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"collectorTokenId","type":"uint256"}],"name":"getGenImTokenIdForCollector","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"genImTokenId","type":"uint256"}],"name":"getMintStats","outputs":[{"internalType":"uint256","name":"mintCount","type":"uint256"},{"internalType":"uint256","name":"currentPrice","type":"uint256"},{"internalType":"uint256","name":"nextPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"collectorTokenId","type":"uint256"}],"name":"getOriginalGenImURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_genImNFTContract","type":"address"},{"internalType":"uint256","name":"_baseMintPrice","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"genImTokenId","type":"uint256"}],"name":"mintCollectorNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"mintCountPerGenImToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_baseMintPrice","type":"uint256"}],"name":"setBaseMintPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_genImNFTContract","type":"address"}],"name":"updateGenImNFTContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}]'),Q=JSON.parse('[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"updater","type":"address"},{"indexed":false,"internalType":"string","name":"imageUrl","type":"string"}],"name":"ImageUpdateRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"updater","type":"address"}],"name":"ImageUpdaterAuthorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isListed","type":"bool"}],"name":"TokenListingChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"updater","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UpdaterPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllPublicTokens","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getAuthorizedImageUpdater","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getPublicTokensOfOwner","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isImageUpdated","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isTokenListed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reinitializeV3","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"imageUrl","type":"string"}],"name":"requestImageUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"uri","type":"string"},{"internalType":"bool","name":"isListed","type":"bool"}],"name":"safeMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"uri","type":"string"}],"name":"safeMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newPrice","type":"uint256"}],"name":"setMintPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"bool","name":"isListed","type":"bool"}],"name":"setMultipleTokensListed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bool","name":"isListed","type":"bool"}],"name":"setTokenListed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}]'),z=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"OwnableInvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"OwnableUnauthorizedAccount",type:"error"},{inputs:[],name:"ReentrancyGuardReentrantCall",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"bytes32",name:"urlHash",type:"bytes32"},{indexed:!1,internalType:"string",name:"url",type:"string"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"LikeReceived",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"donate",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"getLikesForUrl",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"urlLikes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],W=JSON.parse('[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"root","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"totalCost","type":"uint256"}],"name":"BatchProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"DebugLeafHash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LLMDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LLMWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"}],"name":"ServiceProviderAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newProvider","type":"address"}],"name":"ServiceProviderChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"}],"name":"ServiceProviderRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"provider","type":"address"}],"name":"addServiceProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorizedProviders","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"checkBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultServiceProvider","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositForLLM","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"provider","type":"address"}],"name":"isAuthorizedProvider","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"llmBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"components":[{"internalType":"int256","name":"id","type":"int256"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"serviceProvider","type":"address"},{"internalType":"uint256","name":"tokenCount","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"string","name":"timestamp","type":"string"}],"internalType":"struct LLMv1.LLMLeaf[]","name":"leaves","type":"tuple[]"},{"internalType":"bytes32[][]","name":"proofs","type":"bytes32[][]"}],"name":"processBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"processedBatches","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"provider","type":"address"}],"name":"removeServiceProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newProvider","type":"address"}],"name":"setDefaultServiceProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"bytes32","name":"leaf","type":"bytes32"}],"name":"verifyMerkleProof","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawBalance","outputs":[],"stateMutability":"nonpayable","type":"function"}]'),Xt={},q=Xt?.PUBLIC_ENV__CHAIN_NAME||"optimism",Zt=(()=>{switch(q){case"sepolia":return{address:"0xf18E3901D91D8a08380E37A466E6F7f6AA4BD4a6",abi:Q};case"optimism":return{address:"0x80f95d330417a4acEfEA415FE9eE28db7A0A1Cdb",abi:Q};default:return{address:"0x80f95d330417a4acEfEA415FE9eE28db7A0A1Cdb",abi:Q}}})(),en=(()=>{switch(q){case"sepolia":return{address:"0xf137ca5dc45e3d0336ac2daa26084b0eaf244684",abi:z};case"optimism":return{address:"0x314B07fBd33A7343479e99E6682D5Ee1da7F17c1",abi:z};case"optimismSepolia":return{address:"0x314B07fBd33A7343479e99E6682D5Ee1da7F17c1",abi:z};default:return{address:"0x314B07fBd33A7343479e99E6682D5Ee1da7F17c1",abi:z}}})(),tn=(()=>{switch(q){case"sepolia":return{address:"0x0000000000000000000000000000000000000000",abi:L};case"optimism":return{address:"0x584c40d8a7cA164933b5F90a2dC11ddCB4a924ea",abi:L};case"optimismSepolia":return{address:"0x0000000000000000000000000000000000000000",abi:L};default:return{address:"0x584c40d8a7cA164933b5F90a2dC11ddCB4a924ea",abi:L}}})(),nn=(()=>{switch(q){case"optimismSepolia":return{address:"0xB3dbD44477a7bcf253f2fA68eDb4be5aF2F2cA56",abi:W};case"optimism":return{address:"0x833F39D6e67390324796f861990ce9B7cf9F5dE1",abi:W};default:return{address:"0xB3dbD44477a7bcf253f2fA68eDb4be5aF2F2cA56",abi:W}}})(),yn=Zt,cn=en,ln=tn,mn=nn;function fn(){switch(q){case"sepolia":return mt;case"optimism":return oe;case"optimismSepolia":return lt;default:return oe}}export{Ee as A,ke as B,kt as C,cn as D,fn as a,dn as b,pn as c,yn as d,ln as e,Pt as f,Ht as g,ve as h,Bt as i,Fe as j,wt as k,mn as l,S as m,Ut as n,X as o,Gt as p,Me as q,$t as r,qt as s,$ as t,un as u,Ct as v,St as w,sn as x,xe as y,on as z};
