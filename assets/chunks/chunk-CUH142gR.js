const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/chunk-B40JCtQH.js","assets/chunks/chunk-CZNPNpaT.js","assets/chunks/chunk-CT5atk_u.js","assets/static/vike-react-9c9f96f4.BcWtY8Ol.css","assets/static/layouts_style-b34a8e57.D8B4iL9t.css","assets/static/layouts_panda-c5b34b81.vCYQQ2gK.css"])))=>i.map(i=>d[i]);
import{b4 as ye,b5 as Ae,D as ae,M as re,b6 as H,b7 as Be,b8 as Z,b9 as Re,ba as _e,bb as M,bc as Oe,B as E,bd as Ge,be as D,Q as Se,bf as ce,bg as le,bh as Ue,bi as T,J as U,bj as qe,bk as Le,bl as ze,bm as De,bn as He,bo as ee,bp as $e,bq as me,br as fe,bs as Ve,bt as je,bu as Ke,bv as be,bw as Qe,bx as Te,by as We,bz as ie,v as J,bA as Je,bB as Ye,bC as se,bD as Xe,bE as Ze,bF as et,bG as tt,bH as nt,bI as at,bJ as rt,bK as it,bL as st,bM as ot,N as G,bN as ut,z as pt,bO as dt,bP as we,O as te,aV as he,bQ as ge,bR as yt,P as ct,bS as oe,bT as lt,bU as mt}from"./chunk-CZNPNpaT.js";import{_ as ft}from"./chunk-CT5atk_u.js";function bt(e){const t=ye(`0x${e.substring(4)}`).substring(26);return Ae(`0x${t}`)}async function Tt({hash:e,signature:t}){const a=ae(e)?e:re(e),{secp256k1:n}=await ft(async()=>{const{secp256k1:s}=await import("./chunk-B40JCtQH.js");return{secp256k1:s}},__vite__mapDeps([0,1,2,3,4,5]));return`0x${(()=>{if(typeof t=="object"&&"r"in t&&"s"in t){const{r:d,s:l,v:c,yParity:o}=t,y=Number(o??c),f=ue(y);return new n.Signature(H(d),H(l)).addRecoveryBit(f)}const s=ae(t)?t:re(t);if(Be(s)!==65)throw new Error("invalid signature length");const p=Z(`0x${s.slice(130)}`),u=ue(p);return n.Signature.fromCompact(s.substring(2,130)).addRecoveryBit(u)})().recoverPublicKey(a.substring(2)).toHex(!1)}`}function ue(e){if(e===0||e===1)return e;if(e===27)return 0;if(e===28)return 1;throw new Error("Invalid yParityOrV value")}async function wt({hash:e,signature:t}){return bt(await Tt({hash:e,signature:t}))}function ht(e){const{chainId:t,nonce:a,to:n}=e,r=e.contractAddress??e.address,i=ye(Re(["0x05",_e([t?M(t):"0x",r,a?M(a):"0x"])]));return n==="bytes"?Oe(i):i}async function ve(e){const{authorization:t,signature:a}=e;return wt({hash:ht(t),signature:a??t})}class gt extends E{constructor(t,{account:a,docsPath:n,chain:r,data:i,gas:s,gasPrice:p,maxFeePerGas:u,maxPriorityFeePerGas:d,nonce:l,to:c,value:o}){const y=Ge({from:a?.address,to:c,value:typeof o<"u"&&`${Se(o)} ${r?.nativeCurrency?.symbol||"ETH"}`,data:i,gas:s,gasPrice:typeof p<"u"&&`${D(p)} gwei`,maxFeePerGas:typeof u<"u"&&`${D(u)} gwei`,maxPriorityFeePerGas:typeof d<"u"&&`${D(d)} gwei`,nonce:l});super(t.shortMessage,{cause:t,docsPath:n,metaMessages:[...t.metaMessages?[...t.metaMessages," "]:[],"Estimate Gas Arguments:",y].filter(Boolean),name:"EstimateGasExecutionError"}),Object.defineProperty(this,"cause",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.cause=t}}function vt(e,{docsPath:t,...a}){const n=(()=>{const r=ce(e,a);return r instanceof le?e:r})();return new gt(n,{docsPath:t,...a})}class It extends E{constructor(){super("`baseFeeMultiplier` must be greater than 1.",{name:"BaseFeeScalarError"})}}class ne extends E{constructor(){super("Chain does not support EIP-1559 fees.",{name:"Eip1559FeesNotSupportedError"})}}class xt extends E{constructor({maxPriorityFeePerGas:t}){super(`\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${D(t)} gwei).`,{name:"MaxFeePerGasTooLowError"})}}class Ie extends E{constructor({blockHash:t,blockNumber:a}){let n="Block";t&&(n=`Block at hash "${t}"`),a&&(n=`Block at number "${a}"`),super(`${n} could not be found.`,{name:"BlockNotFoundError"})}}async function S(e,{blockHash:t,blockNumber:a,blockTag:n=e.experimental_blockTag??"latest",includeTransactions:r}={}){const i=r??!1,s=a!==void 0?M(a):void 0;let p=null;if(t?p=await e.request({method:"eth_getBlockByHash",params:[t,i]},{dedupe:!0}):p=await e.request({method:"eth_getBlockByNumber",params:[s||n,i]},{dedupe:!!s}),!p)throw new Ie({blockHash:t,blockNumber:a});return(e.chain?.formatters?.block?.format||Ue)(p)}async function xe(e){const t=await e.request({method:"eth_gasPrice"});return BigInt(t)}async function sn(e,t){return Ce(e,t)}async function Ce(e,t){const{block:a,chain:n=e.chain,request:r}=t||{};try{const i=n?.fees?.maxPriorityFeePerGas??n?.fees?.defaultPriorityFee;if(typeof i=="function"){const p=a||await T(e,S,"getBlock")({}),u=await i({block:p,client:e,request:r});if(u===null)throw new Error;return u}if(typeof i<"u")return i;const s=await e.request({method:"eth_maxPriorityFeePerGas"});return H(s)}catch{const[i,s]=await Promise.all([a?Promise.resolve(a):T(e,S,"getBlock")({}),T(e,xe,"getGasPrice")({})]);if(typeof i.baseFeePerGas!="bigint")throw new ne;const p=s-i.baseFeePerGas;return p<0n?0n:p}}async function on(e,t){return Y(e,t)}async function Y(e,t){const{block:a,chain:n=e.chain,request:r,type:i="eip1559"}=t||{},s=await(async()=>typeof n?.fees?.baseFeeMultiplier=="function"?n.fees.baseFeeMultiplier({block:a,client:e,request:r}):n?.fees?.baseFeeMultiplier??1.2)();if(s<1)throw new It;const u=10**(s.toString().split(".")[1]?.length??0),d=o=>o*BigInt(Math.ceil(s*u))/BigInt(u),l=a||await T(e,S,"getBlock")({});if(typeof n?.fees?.estimateFeesPerGas=="function"){const o=await n.fees.estimateFeesPerGas({block:a,client:e,multiply:d,request:r,type:i});if(o!==null)return o}if(i==="eip1559"){if(typeof l.baseFeePerGas!="bigint")throw new ne;const o=typeof r?.maxPriorityFeePerGas=="bigint"?r.maxPriorityFeePerGas:await Ce(e,{block:l,chain:n,request:r}),y=d(l.baseFeePerGas);return{maxFeePerGas:r?.maxFeePerGas??y+o,maxPriorityFeePerGas:o}}return{gasPrice:r?.gasPrice??d(await T(e,xe,"getGasPrice")({}))}}async function Ct(e,{address:t,blockTag:a="latest",blockNumber:n}){const r=await e.request({method:"eth_getTransactionCount",params:[t,typeof n=="bigint"?M(n):a]},{dedupe:!!n});return Z(r)}async function ke(e){const t=await e.request({method:"eth_chainId"},{dedupe:!0});return Z(t)}const Pe=["blobVersionedHashes","chainId","fees","gas","nonce","type"],pe=new Map;async function Me(e,t){const{account:a=e.account,blobs:n,chain:r,gas:i,kzg:s,nonce:p,nonceManager:u,parameters:d=Pe,type:l}=t,c=a&&U(a),o={...t,...c?{from:c?.address}:{}};let y;async function f(){return y||(y=await T(e,S,"getBlock")({blockTag:"latest"}),y)}let w;async function I(){return w||(r?r.id:typeof t.chainId<"u"?t.chainId:(w=await T(e,ke,"getChainId")({}),w))}if(d.includes("nonce")&&typeof p>"u"&&c)if(u){const m=await I();o.nonce=await u.consume({address:c.address,chainId:m,client:e})}else o.nonce=await T(e,Ct,"getTransactionCount")({address:c.address,blockTag:"pending"});if((d.includes("blobVersionedHashes")||d.includes("sidecars"))&&n&&s){const m=qe({blobs:n,kzg:s});if(d.includes("blobVersionedHashes")){const b=Le({commitments:m,to:"hex"});o.blobVersionedHashes=b}if(d.includes("sidecars")){const b=ze({blobs:n,commitments:m,kzg:s}),h=De({blobs:n,commitments:m,proofs:b,to:"hex"});o.sidecars=h}}if(d.includes("chainId")&&(o.chainId=await I()),(d.includes("fees")||d.includes("type"))&&typeof l>"u")try{o.type=He(o)}catch{let m=pe.get(e.uid);typeof m>"u"&&(m=typeof(await f())?.baseFeePerGas=="bigint",pe.set(e.uid,m)),o.type=m?"eip1559":"legacy"}if(d.includes("fees"))if(o.type!=="legacy"&&o.type!=="eip2930"){if(typeof o.maxFeePerGas>"u"||typeof o.maxPriorityFeePerGas>"u"){const m=await f(),{maxFeePerGas:b,maxPriorityFeePerGas:h}=await Y(e,{block:m,chain:r,request:o});if(typeof t.maxPriorityFeePerGas>"u"&&t.maxFeePerGas&&t.maxFeePerGas<h)throw new xt({maxPriorityFeePerGas:h});o.maxPriorityFeePerGas=h,o.maxFeePerGas=b}}else{if(typeof t.maxFeePerGas<"u"||typeof t.maxPriorityFeePerGas<"u")throw new ne;if(typeof t.gasPrice>"u"){const m=await f(),{gasPrice:b}=await Y(e,{block:m,chain:r,request:o,type:"legacy"});o.gasPrice=b}}return d.includes("gas")&&typeof i>"u"&&(o.gas=await T(e,Pt,"estimateGas")({...o,account:c&&{address:c.address,type:"json-rpc"}})),ee(o),delete o.parameters,o}async function kt(e,{address:t,blockNumber:a,blockTag:n=e.experimental_blockTag??"latest"}){const r=typeof a=="bigint"?M(a):void 0,i=await e.request({method:"eth_getBalance",params:[t,r||n]});return BigInt(i)}async function Pt(e,t){const{account:a=e.account}=t,n=a?U(a):void 0;try{let g=function(B){const{block:R,request:_,rpcStateOverride:O}=B;return e.request({method:"eth_estimateGas",params:O?[_,R??e.experimental_blockTag??"latest",O]:R?[_,R]:[_]})};const{accessList:r,authorizationList:i,blobs:s,blobVersionedHashes:p,blockNumber:u,blockTag:d,data:l,gas:c,gasPrice:o,maxFeePerBlobGas:y,maxFeePerGas:f,maxPriorityFeePerGas:w,nonce:I,value:m,stateOverride:b,...h}=await Me(e,{...t,parameters:n?.type==="local"?void 0:["blobVersionedHashes"]}),v=(typeof u=="bigint"?M(u):void 0)||d,A=$e(b),C=await(async()=>{if(h.to)return h.to;if(i&&i.length>0)return await ve({authorization:i[0]}).catch(()=>{throw new E("`to` is required. Could not infer from `authorizationList`")})})();ee(t);const k=e.chain?.formatters?.transactionRequest?.format,x=(k||me)({...fe(h,{format:k}),from:n?.address,accessList:r,authorizationList:i,blobs:s,blobVersionedHashes:p,data:l,gas:c,gasPrice:o,maxFeePerBlobGas:y,maxFeePerGas:f,maxPriorityFeePerGas:w,nonce:I,to:C,value:m});let P=BigInt(await g({block:v,request:x,rpcStateOverride:A}));if(i){const B=await kt(e,{address:x.from}),R=await Promise.all(i.map(async _=>{const{address:O}=_,Ne=await g({block:v,request:{authorizationList:void 0,data:l,from:n?.address,to:O,value:M(B)},rpcStateOverride:A}).catch(()=>100000n);return 2n*BigInt(Ne)}));P+=R.reduce((_,O)=>_+O,0n)}return P}catch(r){throw vt(r,{...t,account:n,chain:e.chain})}}const Mt=new Map,Ft=new Map;function Et(e){const t=(r,i)=>({clear:()=>i.delete(r),get:()=>i.get(r),set:s=>i.set(r,s)}),a=t(e,Mt),n=t(e,Ft);return{clear:()=>{a.clear(),n.clear()},promise:a,response:n}}async function Nt(e,{cacheKey:t,cacheTime:a=Number.POSITIVE_INFINITY}){const n=Et(t),r=n.response.get();if(r&&a>0&&Date.now()-r.created.getTime()<a)return r.data;let i=n.promise.get();i||(i=e(),n.promise.set(i));try{const s=await i;return n.response.set({created:new Date,data:s}),s}finally{n.promise.clear()}}const At=e=>`blockNumber.${e}`;async function Bt(e,{cacheTime:t=e.cacheTime}={}){const a=await Nt(()=>e.request({method:"eth_blockNumber"}),{cacheKey:At(e.uid),cacheTime:t});return BigInt(a)}function Rt({chain:e,currentChainId:t}){if(!e)throw new Ve;if(t!==e.id)throw new je({chain:e,currentChainId:t})}function _t(e,{docsPath:t,...a}){const n=(()=>{const r=ce(e,a);return r instanceof le?e:r})();return new Ke(n,{docsPath:t,...a})}async function Fe(e,{blockHash:t,blockNumber:a,blockTag:n,hash:r,index:i}){const s=n||"latest",p=a!==void 0?M(a):void 0;let u=null;if(r?u=await e.request({method:"eth_getTransactionByHash",params:[r]},{dedupe:!0}):t?u=await e.request({method:"eth_getTransactionByBlockHashAndIndex",params:[t,M(i)]},{dedupe:!0}):u=await e.request({method:"eth_getTransactionByBlockNumberAndIndex",params:[p||s,M(i)]},{dedupe:!!p}),!u)throw new be({blockHash:t,blockNumber:a,blockTag:s,hash:r,index:i});return(e.chain?.formatters?.transaction?.format||Qe)(u)}async function $(e,{hash:t}){const a=await e.request({method:"eth_getTransactionReceipt",params:[t]},{dedupe:!0});if(!a)throw new Te({hash:t});return(e.chain?.formatters?.transactionReceipt?.format||We)(a)}const V=new Map,de=new Map;let Ot=0;function X(e,t,a){const n=++Ot,r=()=>V.get(e)||[],i=()=>{const l=r();V.set(e,l.filter(c=>c.id!==n))},s=()=>{const l=r();if(!l.some(o=>o.id===n))return;const c=de.get(e);if(l.length===1&&c){const o=c();o instanceof Promise&&o.catch(()=>{})}i()},p=r();if(V.set(e,[...p,{id:n,fns:t}]),p&&p.length>0)return s;const u={};for(const l in t)u[l]=(...c)=>{const o=r();if(o.length!==0)for(const y of o)y.fns[l]?.(...c)};const d=a(u);return typeof d=="function"&&de.set(e,d),s}function Gt(e,{emitOnBegin:t,initialWaitTime:a,interval:n}){let r=!0;const i=()=>r=!1;return(async()=>{let p;t&&(p=await e({unpoll:i}));const u=await a?.(p)??n;await ie(u);const d=async()=>{r&&(await e({unpoll:i}),await ie(n),d())};d()})(),i}function St(e,{emitOnBegin:t=!1,emitMissed:a=!1,onBlockNumber:n,onError:r,poll:i,pollingInterval:s=e.pollingInterval}){const p=typeof i<"u"?i:!(e.transport.type==="webSocket"||e.transport.type==="ipc"||e.transport.type==="fallback"&&(e.transport.transports[0].config.type==="webSocket"||e.transport.transports[0].config.type==="ipc"));let u;return p?(()=>{const c=J(["watchBlockNumber",e.uid,t,a,s]);return X(c,{onBlockNumber:n,onError:r},o=>Gt(async()=>{try{const y=await T(e,Bt,"getBlockNumber")({cacheTime:0});if(u){if(y===u)return;if(y-u>1&&a)for(let f=u+1n;f<y;f++)o.onBlockNumber(f,u),u=f}(!u||y>u)&&(o.onBlockNumber(y,u),u=y)}catch(y){o.onError?.(y)}},{emitOnBegin:t,interval:s}))})():(()=>{const c=J(["watchBlockNumber",e.uid,t,a]);return X(c,{onBlockNumber:n,onError:r},o=>{let y=!0,f=()=>y=!1;return(async()=>{try{const w=(()=>{if(e.transport.type==="fallback"){const m=e.transport.transports.find(b=>b.config.type==="webSocket"||b.config.type==="ipc");return m?m.value:e.transport}return e.transport})(),{unsubscribe:I}=await w.subscribe({params:["newHeads"],onData(m){if(!y)return;const b=H(m.result?.number);o.onBlockNumber(b,u),u=b},onError(m){o.onError?.(m)}});f=I,y||f()}catch(w){r?.(w)}})(),()=>f()})})()}async function Ut(e,t){const{checkReplacement:a=!0,confirmations:n=1,hash:r,onReplaced:i,retryCount:s=6,retryDelay:p=({count:v})=>~~(1<<v)*200,timeout:u=18e4}=t,d=J(["waitForTransactionReceipt",e.uid,r]),l=t.pollingInterval?t.pollingInterval:e.chain?.experimental_preconfirmationTime?e.chain.experimental_preconfirmationTime:e.pollingInterval;let c,o,y,f=!1,w,I;const{promise:m,resolve:b,reject:h}=Je(),N=u?setTimeout(()=>{I?.(),w?.(),h(new Ye({hash:r}))},u):void 0;return w=X(d,{onReplaced:i,resolve:b,reject:h},async v=>{if(y=await T(e,$,"getTransactionReceipt")({hash:r}).catch(()=>{}),y&&n<=1){clearTimeout(N),v.resolve(y),w?.();return}I=T(e,St,"watchBlockNumber")({emitMissed:!0,emitOnBegin:!0,poll:!0,pollingInterval:l,async onBlockNumber(A){const C=F=>{clearTimeout(N),I?.(),F(),w?.()};let k=A;if(!f)try{if(y){if(n>1&&(!y.blockNumber||k-y.blockNumber+1n<n))return;C(()=>v.resolve(y));return}if(a&&!c&&(f=!0,await se(async()=>{c=await T(e,Fe,"getTransaction")({hash:r}),c.blockNumber&&(k=c.blockNumber)},{delay:p,retryCount:s}),f=!1),y=await T(e,$,"getTransactionReceipt")({hash:r}),n>1&&(!y.blockNumber||k-y.blockNumber+1n<n))return;C(()=>v.resolve(y))}catch(F){if(F instanceof be||F instanceof Te){if(!c){f=!1;return}try{o=c,f=!0;const x=await se(()=>T(e,S,"getBlock")({blockNumber:k,includeTransactions:!0}),{delay:p,retryCount:s,shouldRetry:({error:B})=>B instanceof Ie});f=!1;const g=x.transactions.find(({from:B,nonce:R})=>B===o.from&&R===o.nonce);if(!g||(y=await T(e,$,"getTransactionReceipt")({hash:g.hash}),n>1&&(!y.blockNumber||k-y.blockNumber+1n<n)))return;let P="replaced";g.to===o.to&&g.value===o.value&&g.input===o.input?P="repriced":g.from===g.to&&g.value===0n&&(P="cancelled"),C(()=>{v.onReplaced?.({reason:P,replacedTransaction:o,transaction:g,transactionReceipt:y}),v.resolve(y)})}catch(x){C(()=>v.reject(x))}}else C(()=>v.reject(F))}}})}),m}class Ee extends E{constructor({docsPath:t}={}){super(["Could not find an Account to execute with this Action.","Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client."].join(`
`),{docsPath:t,docsSlug:"account",name:"AccountNotFoundError"})}}class j extends E{constructor({docsPath:t,metaMessages:a,type:n}){super(`Account type "${n}" is not supported.`,{docsPath:t,metaMessages:a,name:"AccountTypeNotSupportedError"})}}async function qt(e,{serializedTransaction:t}){return e.request({method:"eth_sendRawTransaction",params:[t]},{retryCount:0})}const K=new Xe(128);async function Lt(e,t){const{account:a=e.account,chain:n=e.chain,accessList:r,authorizationList:i,blobs:s,data:p,gas:u,gasPrice:d,maxFeePerBlobGas:l,maxFeePerGas:c,maxPriorityFeePerGas:o,nonce:y,type:f,value:w,...I}=t;if(typeof a>"u")throw new Ee({docsPath:"/docs/actions/wallet/sendTransaction"});const m=a?U(a):null;try{ee(t);const b=await(async()=>{if(t.to)return t.to;if(t.to!==null&&i&&i.length>0)return await ve({authorization:i[0]}).catch(()=>{throw new E("`to` is required. Could not infer from `authorizationList`.")})})();if(m?.type==="json-rpc"||m===null){let h;n!==null&&(h=await T(e,ke,"getChainId")({}),Rt({currentChainId:h,chain:n}));const N=e.chain?.formatters?.transactionRequest?.format,A=(N||me)({...fe(I,{format:N}),accessList:r,authorizationList:i,blobs:s,chainId:h,data:p,from:m?.address,gas:u,gasPrice:d,maxFeePerBlobGas:l,maxFeePerGas:c,maxPriorityFeePerGas:o,nonce:y,to:b,type:f,value:w}),C=K.get(e.uid),k=C?"wallet_sendTransaction":"eth_sendTransaction";try{return await e.request({method:k,params:[A]},{retryCount:0})}catch(F){if(C===!1)throw F;const x=F;if(x.name==="InvalidInputRpcError"||x.name==="InvalidParamsRpcError"||x.name==="MethodNotFoundRpcError"||x.name==="MethodNotSupportedRpcError")return await e.request({method:"wallet_sendTransaction",params:[A]},{retryCount:0}).then(g=>(K.set(e.uid,!0),g)).catch(g=>{const P=g;throw P.name==="MethodNotFoundRpcError"||P.name==="MethodNotSupportedRpcError"?(K.set(e.uid,!1),x):P});throw x}}if(m?.type==="local"){const h=await T(e,Me,"prepareTransactionRequest")({account:m,accessList:r,authorizationList:i,blobs:s,chain:n,data:p,gas:u,gasPrice:d,maxFeePerBlobGas:l,maxFeePerGas:c,maxPriorityFeePerGas:o,nonce:y,nonceManager:m.nonceManager,parameters:[...Pe,"sidecars"],type:f,value:w,...I,to:b}),N=n?.serializers?.transaction,v=await m.signTransaction(h,{serializer:N});return await T(e,qt,"sendRawTransaction")({serializedTransaction:v})}throw m?.type==="smart"?new j({metaMessages:["Consider using the `sendUserOperation` Action instead."],docsPath:"/docs/actions/bundler/sendUserOperation",type:"smart"}):new j({docsPath:"/docs/actions/wallet/sendTransaction",type:m?.type})}catch(b){throw b instanceof j?b:_t(b,{...t,account:m,chain:t.chain||void 0})}}async function zt(e,t){const{abi:a,account:n=e.account,address:r,args:i,dataSuffix:s,functionName:p,...u}=t;if(typeof n>"u")throw new Ee({docsPath:"/docs/contract/writeContract"});const d=n?U(n):null,l=Ze({abi:a,args:i,functionName:p});try{return await T(e,Lt,"sendTransaction")({data:`${l}${s?s.replace("0x",""):""}`,to:r,account:d,...u})}catch(c){throw et(c,{abi:a,address:r,args:i,docsPath:"/docs/contract/writeContract",functionName:p,sender:d?.address})}}function Dt(e,t={}){const{key:a="custom",methods:n,name:r="Custom Provider",retryDelay:i}=t;return({retryCount:s})=>tt({key:a,methods:n,name:r,request:e.request.bind(e),retryCount:t.retryCount??s,retryDelay:i,type:"custom"})}async function Ht(e,t={}){const{assertChainId:a=!0}=t;let n;if(t.connector){const{connector:l}=t;if(e.state.status==="reconnecting"&&!l.getAccounts&&!l.getChainId)throw new nt({connector:l});const[c,o]=await Promise.all([l.getAccounts().catch(y=>{if(t.account===null)return[];throw y}),l.getChainId()]);n={accounts:c,chainId:o,connector:l}}else n=e.state.connections.get(e.state.current);if(!n)throw new at;const r=t.chainId??n.chainId,i=await n.connector.getChainId();if(a&&i!==r)throw new rt({connectionChainId:r,connectorChainId:i});const s=n.connector;if(s.getClient)return s.getClient({chainId:r});const p=U(t.account??n.accounts[0]);if(p&&(p.address=it(p.address)),t.account&&!n.accounts.some(l=>l.toLowerCase()===p.address.toLowerCase()))throw new st({address:p.address,connector:s});const u=e.chains.find(l=>l.id===r),d=await n.connector.getProvider({chainId:r});return ot({account:p,chain:u,name:"Connector Client",transport:l=>Dt(d)({...l,retryCount:0})})}function $t(e,t){const{chainId:a,...n}=t,r=e.getClient({chainId:a});return G(r,ut,"readContract")(n)}async function Vt(e,t){const{chainId:a,timeout:n=0,...r}=t,i=e.getClient({chainId:a}),p=await G(i,Ut,"waitForTransactionReceipt")({...r,timeout:n});if(p.status==="reverted"){const d=await G(i,Fe,"getTransaction")({hash:p.transactionHash}),c=await G(i,pt,"call")({...d,data:d.input,gasPrice:d.type!=="eip1559"?d.gasPrice:void 0,maxFeePerGas:d.type==="eip1559"?d.maxFeePerGas:void 0,maxPriorityFeePerGas:d.type==="eip1559"?d.maxPriorityFeePerGas:void 0}),o=c?.data?dt(`0x${c.data.substring(138)}`):"unknown reason";throw new Error(o)}return{...p,chainId:i.chain.id}}async function jt(e,t){const{account:a,chainId:n,connector:r,...i}=t;let s;return typeof a=="object"&&a?.type==="local"?s=e.getClient({chainId:n}):s=await Ht(e,{account:a??void 0,assertChainId:!1,chainId:n,connector:r}),await G(s,zt,"writeContract")({...i,...a?{account:a}:{},chain:n?{id:n}:null})}function Kt(e,t={}){return{async queryFn({queryKey:a}){const n=t.abi;if(!n)throw new Error("abi is required");const{functionName:r,scopeKey:i,...s}=a[1],p=(()=>{const u=a[1];if(u.address)return{address:u.address};if(u.code)return{code:u.code};throw new Error("address or code is required")})();if(!r)throw new Error("functionName is required");return $t(e,{abi:n,functionName:r,args:s.args,...p,...s})},queryKey:Qt(t)}}function Qt(e={}){const{abi:t,...a}=e;return["readContract",we(a)]}function Wt(e,t={}){return{async queryFn({queryKey:a}){const{hash:n,...r}=a[1];if(!n)throw new Error("hash is required");return Vt(e,{...r,onReplaced:t.onReplaced,hash:n})},queryKey:Jt(t)}}function Jt(e={}){const{onReplaced:t,...a}=e;return["waitForTransactionReceipt",we(a)]}function Yt(e){return{mutationFn(t){return jt(e,t)},mutationKey:["writeContract"]}}function un(e={}){const{abi:t,address:a,functionName:n,query:r={}}=e,i=e.code,s=te(e),p=he({config:s}),u=Kt(s,{...e,chainId:e.chainId??p}),d=!!((a||i)&&t&&n&&(r.enabled??!0));return ge({...r,...u,enabled:d,structuralSharing:r.structuralSharing??yt})}function pn(e={}){const{hash:t,query:a={}}=e,n=te(e),r=he({config:n}),i=Wt(n,{...e,chainId:e.chainId??r}),s=!!(t&&(a.enabled??!0));return ge({...a,...i,enabled:s})}function dn(e={}){const{mutation:t}=e,a=te(e),n=Yt(a),{mutate:r,mutateAsync:i,...s}=ct({...t,...n});return{...s,writeContract:r,writeContractAsync:i}}const L=JSON.parse('[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"GenImTokenNotFound","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"GenImTokenNotListed","type":"error"},{"inputs":[{"internalType":"uint256","name":"required","type":"uint256"},{"internalType":"uint256","name":"provided","type":"uint256"}],"name":"InsufficientPayment","type":"error"},{"inputs":[],"name":"InvalidGenImNFTContract","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"PaymentToCreatorFailed","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"RefundFailed","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"collectorTokenId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"genImTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"collector","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"mintNumber","type":"uint256"}],"name":"CollectorNFTMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"genImNFTContract","type":"address"},{"indexed":false,"internalType":"uint256","name":"baseMintPrice","type":"uint256"}],"name":"ContractInitialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"genImTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PaymentSentToCreator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseMintPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"collectorToGenImToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"collectorTokensByGenImToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"genImNFTContract","outputs":[{"internalType":"contract IGenImNFTWithListing","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"genImTokenId","type":"uint256"}],"name":"getCollectorTokensForGenIm","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"genImTokenId","type":"uint256"}],"name":"getCurrentPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"collectorTokenId","type":"uint256"}],"name":"getGenImTokenIdForCollector","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"genImTokenId","type":"uint256"}],"name":"getMintStats","outputs":[{"internalType":"uint256","name":"mintCount","type":"uint256"},{"internalType":"uint256","name":"currentPrice","type":"uint256"},{"internalType":"uint256","name":"nextPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"collectorTokenId","type":"uint256"}],"name":"getOriginalGenImURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_genImNFTContract","type":"address"},{"internalType":"uint256","name":"_baseMintPrice","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"genImTokenId","type":"uint256"}],"name":"mintCollectorNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"mintCountPerGenImToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_baseMintPrice","type":"uint256"}],"name":"setBaseMintPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_genImNFTContract","type":"address"}],"name":"updateGenImNFTContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}]'),Q=JSON.parse('[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"updater","type":"address"},{"indexed":false,"internalType":"string","name":"imageUrl","type":"string"}],"name":"ImageUpdateRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"updater","type":"address"}],"name":"ImageUpdaterAuthorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isListed","type":"bool"}],"name":"TokenListingChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"updater","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UpdaterPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllPublicTokens","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getAuthorizedImageUpdater","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getPublicTokensOfOwner","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isImageUpdated","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isTokenListed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reinitializeV3","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"imageUrl","type":"string"}],"name":"requestImageUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"uri","type":"string"},{"internalType":"bool","name":"isListed","type":"bool"}],"name":"safeMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"uri","type":"string"}],"name":"safeMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newPrice","type":"uint256"}],"name":"setMintPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"bool","name":"isListed","type":"bool"}],"name":"setMultipleTokensListed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bool","name":"isListed","type":"bool"}],"name":"setTokenListed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}]'),z=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"OwnableInvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"OwnableUnauthorizedAccount",type:"error"},{inputs:[],name:"ReentrancyGuardReentrantCall",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"bytes32",name:"urlHash",type:"bytes32"},{indexed:!1,internalType:"string",name:"url",type:"string"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"LikeReceived",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"donate",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"getLikesForUrl",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"urlLikes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],W=JSON.parse('[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"root","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"totalCost","type":"uint256"}],"name":"BatchProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"DebugLeafHash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LLMDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LLMWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"}],"name":"ServiceProviderAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newProvider","type":"address"}],"name":"ServiceProviderChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"}],"name":"ServiceProviderRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"provider","type":"address"}],"name":"addServiceProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorizedProviders","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"checkBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultServiceProvider","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositForLLM","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"provider","type":"address"}],"name":"isAuthorizedProvider","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"llmBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"components":[{"internalType":"int256","name":"id","type":"int256"},{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"serviceProvider","type":"address"},{"internalType":"uint256","name":"tokenCount","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"string","name":"timestamp","type":"string"}],"internalType":"struct LLMv1.LLMLeaf[]","name":"leaves","type":"tuple[]"},{"internalType":"bytes32[][]","name":"proofs","type":"bytes32[][]"}],"name":"processBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"processedBatches","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"provider","type":"address"}],"name":"removeServiceProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newProvider","type":"address"}],"name":"setDefaultServiceProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"bytes32","name":"leaf","type":"bytes32"}],"name":"verifyMerkleProof","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawBalance","outputs":[],"stateMutability":"nonpayable","type":"function"}]'),Xt={},q=Xt?.PUBLIC_ENV__CHAIN_NAME||"optimism",Zt=(()=>{switch(q){case"sepolia":return{address:"0xf18E3901D91D8a08380E37A466E6F7f6AA4BD4a6",abi:Q};case"optimism":return{address:"0x80f95d330417a4acEfEA415FE9eE28db7A0A1Cdb",abi:Q};default:return{address:"0x80f95d330417a4acEfEA415FE9eE28db7A0A1Cdb",abi:Q}}})(),en=(()=>{switch(q){case"sepolia":return{address:"0xf137ca5dc45e3d0336ac2daa26084b0eaf244684",abi:z};case"optimism":return{address:"0x314B07fBd33A7343479e99E6682D5Ee1da7F17c1",abi:z};case"optimismSepolia":return{address:"0x314B07fBd33A7343479e99E6682D5Ee1da7F17c1",abi:z};default:return{address:"0x314B07fBd33A7343479e99E6682D5Ee1da7F17c1",abi:z}}})(),tn=(()=>{switch(q){case"sepolia":return{address:"0x0000000000000000000000000000000000000000",abi:L};case"optimism":return{address:"0x584c40d8a7cA164933b5F90a2dC11ddCB4a924ea",abi:L};case"optimismSepolia":return{address:"0x0000000000000000000000000000000000000000",abi:L};default:return{address:"0x584c40d8a7cA164933b5F90a2dC11ddCB4a924ea",abi:L}}})(),nn=(()=>{switch(q){case"optimismSepolia":return{address:"0xB3dbD44477a7bcf253f2fA68eDb4be5aF2F2cA56",abi:W};case"optimism":return{address:"0x833F39D6e67390324796f861990ce9B7cf9F5dE1",abi:W};default:return{address:"0xB3dbD44477a7bcf253f2fA68eDb4be5aF2F2cA56",abi:W}}})(),yn=Zt,cn=en,ln=tn,mn=nn;function fn(){switch(q){case"sepolia":return mt;case"optimism":return oe;case"optimismSepolia":return lt;default:return oe}}export{Ee as A,ke as B,kt as C,cn as D,fn as a,dn as b,pn as c,yn as d,ln as e,Pt as f,Ht as g,ve as h,Bt as i,Fe as j,wt as k,mn as l,S as m,Ut as n,X as o,Gt as p,Me as q,$t as r,qt as s,$ as t,un as u,Ct as v,St as w,sn as x,xe as y,on as z};
