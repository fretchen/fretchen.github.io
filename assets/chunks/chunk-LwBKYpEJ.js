const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/chunk-DNNKv1rM.js","assets/chunks/chunk-Y1mneeJi.js","assets/chunks/chunk-lek2_cOl.js","assets/static/vike-react-b64a028b.BcWtY8Ol.css","assets/static/layouts_style-b34a8e57.a91n6qlS.css"])))=>i.map(i=>d[i]);
import{B as F,E as se,G as Te,H as J,I as X,k as V,J as j,K as ge,M as xe,n as I,N as Pe,O as Fe,P as Ce,Q as ie,U as oe,R as ve,S as H,V as Ie,l as T,X as Ee,Y as ke,Z as N,_ as Me,$ as Q,a0 as ue,a1 as de,a2 as Be,a3 as Ae,a4 as Ge,a5 as _e,a6 as Oe,a7 as Ne,a8 as Re,a9 as qe,aa as Se,ab as He,ac as $e,ad as Ue,ae as Le,af as ze,ag as De,t as ce,ah as Ke,y as Ve,z as pe,A as je,C as Qe,ai as We,aj as Je,ak as Xe,al as Y,am as Z,an as Ye}from"./chunk-Y1mneeJi.js";import{_ as Ze}from"./chunk-lek2_cOl.js";class ye extends F{constructor({docsPath:t}={}){super(["Could not find an Account to execute with this Action.","Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client."].join(`
`),{docsPath:t,docsSlug:"account",name:"AccountNotFoundError"})}}class z extends F{constructor({docsPath:t,metaMessages:a,type:n}){super(`Account type "${n}" is not supported.`,{docsPath:t,metaMessages:a,name:"AccountTypeNotSupportedError"})}}function et(e){const t=se(`0x${e.substring(4)}`).substring(26);return Te(`0x${t}`)}async function tt({hash:e,signature:t}){const a=J(e)?e:X(e),{secp256k1:n}=await Ze(async()=>{const{secp256k1:s}=await import("./chunk-DNNKv1rM.js");return{secp256k1:s}},__vite__mapDeps([0,1,2,3,4]));return`0x${(()=>{if(typeof t=="object"&&"r"in t&&"s"in t){const{r:i,s:l,v:p,yParity:d}=t,h=Number(d??p),m=ee(h);return new n.Signature(V(i),V(l)).addRecoveryBit(m)}const s=J(t)?t:X(t),c=j(`0x${s.slice(130)}`),u=ee(c);return n.Signature.fromCompact(s.substring(2,130)).addRecoveryBit(u)})().recoverPublicKey(a.substring(2)).toHex(!1)}`}function ee(e){if(e===0||e===1)return e;if(e===27)return 0;if(e===28)return 1;throw new Error("Invalid yParityOrV value")}async function nt({hash:e,signature:t}){return et(await tt({hash:e,signature:t}))}function at(e){const{chainId:t,nonce:a,to:n}=e,r=e.contractAddress??e.address,o=se(ge(["0x05",xe([t?I(t):"0x",r,a?I(a):"0x"])]));return n==="bytes"?Pe(o):o}async function le(e){const{authorization:t,signature:a}=e;return nt({hash:at(t),signature:a??t})}function rt({chain:e,currentChainId:t}){if(!e)throw new Fe;if(t!==e.id)throw new Ce({chain:e,currentChainId:t})}function st(e,{docsPath:t,...a}){const n=(()=>{const r=ie(e,a);return r instanceof oe?e:r})();return new ve(n,{docsPath:t,...a})}async function me(e){const t=await e.request({method:"eth_chainId"},{dedupe:!0});return j(t)}class it extends F{constructor(){super("`baseFeeMultiplier` must be greater than 1.",{name:"BaseFeeScalarError"})}}class W extends F{constructor(){super("Chain does not support EIP-1559 fees.",{name:"Eip1559FeesNotSupportedError"})}}class ot extends F{constructor({maxPriorityFeePerGas:t}){super(`\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${H(t)} gwei).`,{name:"MaxFeePerGasTooLowError"})}}class ut extends F{constructor({blockHash:t,blockNumber:a}){let n="Block";t&&(n=`Block at hash "${t}"`),a&&(n=`Block at number "${a}"`),super(`${n} could not be found.`,{name:"BlockNotFoundError"})}}async function $(e,{blockHash:t,blockNumber:a,blockTag:n,includeTransactions:r}={}){var l,p,d;const o=n??"latest",s=r??!1,c=a!==void 0?I(a):void 0;let u=null;if(t?u=await e.request({method:"eth_getBlockByHash",params:[t,s]},{dedupe:!0}):u=await e.request({method:"eth_getBlockByNumber",params:[c||o,s]},{dedupe:!!c}),!u)throw new ut({blockHash:t,blockNumber:a});return(((d=(p=(l=e.chain)==null?void 0:l.formatters)==null?void 0:p.block)==null?void 0:d.format)||Ie)(u)}async function fe(e){const t=await e.request({method:"eth_gasPrice"});return BigInt(t)}async function dt(e,t){var o,s;const{block:a,chain:n=e.chain,request:r}=t||{};try{const c=((o=n==null?void 0:n.fees)==null?void 0:o.maxPriorityFeePerGas)??((s=n==null?void 0:n.fees)==null?void 0:s.defaultPriorityFee);if(typeof c=="function"){const i=a||await T(e,$,"getBlock")({}),l=await c({block:i,client:e,request:r});if(l===null)throw new Error;return l}if(typeof c<"u")return c;const u=await e.request({method:"eth_maxPriorityFeePerGas"});return V(u)}catch{const[c,u]=await Promise.all([a?Promise.resolve(a):T(e,$,"getBlock")({}),T(e,fe,"getGasPrice")({})]);if(typeof c.baseFeePerGas!="bigint")throw new W;const i=u-c.baseFeePerGas;return i<0n?0n:i}}async function te(e,t){var d,h;const{block:a,chain:n=e.chain,request:r,type:o="eip1559"}=t||{},s=await(async()=>{var m,b;return typeof((m=n==null?void 0:n.fees)==null?void 0:m.baseFeeMultiplier)=="function"?n.fees.baseFeeMultiplier({block:a,client:e,request:r}):((b=n==null?void 0:n.fees)==null?void 0:b.baseFeeMultiplier)??1.2})();if(s<1)throw new it;const u=10**(((d=s.toString().split(".")[1])==null?void 0:d.length)??0),i=m=>m*BigInt(Math.ceil(s*u))/BigInt(u),l=a||await T(e,$,"getBlock")({});if(typeof((h=n==null?void 0:n.fees)==null?void 0:h.estimateFeesPerGas)=="function"){const m=await n.fees.estimateFeesPerGas({block:a,client:e,multiply:i,request:r,type:o});if(m!==null)return m}if(o==="eip1559"){if(typeof l.baseFeePerGas!="bigint")throw new W;const m=typeof(r==null?void 0:r.maxPriorityFeePerGas)=="bigint"?r.maxPriorityFeePerGas:await dt(e,{block:l,chain:n,request:r}),b=i(l.baseFeePerGas);return{maxFeePerGas:(r==null?void 0:r.maxFeePerGas)??b+m,maxPriorityFeePerGas:m}}return{gasPrice:(r==null?void 0:r.gasPrice)??i(await T(e,fe,"getGasPrice")({}))}}class ct extends F{constructor(t,{account:a,docsPath:n,chain:r,data:o,gas:s,gasPrice:c,maxFeePerGas:u,maxPriorityFeePerGas:i,nonce:l,to:p,value:d}){var m;const h=Ee({from:a==null?void 0:a.address,to:p,value:typeof d<"u"&&`${ke(d)} ${((m=r==null?void 0:r.nativeCurrency)==null?void 0:m.symbol)||"ETH"}`,data:o,gas:s,gasPrice:typeof c<"u"&&`${H(c)} gwei`,maxFeePerGas:typeof u<"u"&&`${H(u)} gwei`,maxPriorityFeePerGas:typeof i<"u"&&`${H(i)} gwei`,nonce:l});super(t.shortMessage,{cause:t,docsPath:n,metaMessages:[...t.metaMessages?[...t.metaMessages," "]:[],"Estimate Gas Arguments:",h].filter(Boolean),name:"EstimateGasExecutionError"}),Object.defineProperty(this,"cause",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.cause=t}}function pt(e,{docsPath:t,...a}){const n=(()=>{const r=ie(e,a);return r instanceof oe?e:r})();return new ct(n,{docsPath:t,...a})}async function yt(e,{address:t,blockNumber:a,blockTag:n="latest"}){const r=a?I(a):void 0,o=await e.request({method:"eth_getBalance",params:[t,r||n]});return BigInt(o)}async function lt(e,t){var r,o,s;const{account:a=e.account}=t,n=a?N(a):void 0;try{let E=function(L){const{block:_,request:v,rpcStateOverride:M}=L;return e.request({method:"eth_estimateGas",params:M?[v,_??"latest",M]:_?[v,_]:[v]})};const{accessList:c,authorizationList:u,blobs:i,blobVersionedHashes:l,blockNumber:p,blockTag:d,data:h,gas:m,gasPrice:b,maxFeePerBlobGas:y,maxFeePerGas:f,maxPriorityFeePerGas:w,nonce:g,value:R,stateOverride:C,...x}=await we(e,{...t,parameters:(n==null?void 0:n.type)==="local"?void 0:["blobVersionedHashes"]}),A=(p?I(p):void 0)||d,G=Me(C),q=await(async()=>{if(x.to)return x.to;if(u&&u.length>0)return await le({authorization:u[0]}).catch(()=>{throw new F("`to` is required. Could not infer from `authorizationList`")})})();Q(t);const S=(s=(o=(r=e.chain)==null?void 0:r.formatters)==null?void 0:o.transactionRequest)==null?void 0:s.format,P=(S||ue)({...de(x,{format:S}),from:n==null?void 0:n.address,accessList:c,authorizationList:u,blobs:i,blobVersionedHashes:l,data:h,gas:m,gasPrice:b,maxFeePerBlobGas:y,maxFeePerGas:f,maxPriorityFeePerGas:w,nonce:g,to:q,value:R});let k=BigInt(await E({block:A,request:P,rpcStateOverride:G}));if(u){const L=await yt(e,{address:P.from}),_=await Promise.all(u.map(async v=>{const{address:M}=v,be=await E({block:A,request:{authorizationList:void 0,data:h,from:n==null?void 0:n.address,to:M,value:I(L)},rpcStateOverride:G}).catch(()=>100000n);return 2n*BigInt(be)}));k+=_.reduce((v,M)=>v+M,0n)}return k}catch(c){throw pt(c,{...t,account:n,chain:e.chain})}}async function mt(e,{address:t,blockTag:a="latest",blockNumber:n}){const r=await e.request({method:"eth_getTransactionCount",params:[t,n?I(n):a]},{dedupe:!!n});return j(r)}const he=["blobVersionedHashes","chainId","fees","gas","nonce","type"],ne=new Map;async function we(e,t){const{account:a=e.account,blobs:n,chain:r,gas:o,kzg:s,nonce:c,nonceManager:u,parameters:i=he,type:l}=t,p=a&&N(a),d={...t,...p?{from:p==null?void 0:p.address}:{}};let h;async function m(){return h||(h=await T(e,$,"getBlock")({blockTag:"latest"}),h)}let b;async function y(){return b||(r?r.id:typeof t.chainId<"u"?t.chainId:(b=await T(e,me,"getChainId")({}),b))}if(i.includes("nonce")&&typeof c>"u"&&p)if(u){const f=await y();d.nonce=await u.consume({address:p.address,chainId:f,client:e})}else d.nonce=await T(e,mt,"getTransactionCount")({address:p.address,blockTag:"pending"});if((i.includes("blobVersionedHashes")||i.includes("sidecars"))&&n&&s){const f=Be({blobs:n,kzg:s});if(i.includes("blobVersionedHashes")){const w=Ae({commitments:f,to:"hex"});d.blobVersionedHashes=w}if(i.includes("sidecars")){const w=Ge({blobs:n,commitments:f,kzg:s}),g=_e({blobs:n,commitments:f,proofs:w,to:"hex"});d.sidecars=g}}if(i.includes("chainId")&&(d.chainId=await y()),(i.includes("fees")||i.includes("type"))&&typeof l>"u")try{d.type=Oe(d)}catch{let f=ne.get(e.uid);if(typeof f>"u"){const w=await m();f=typeof(w==null?void 0:w.baseFeePerGas)=="bigint",ne.set(e.uid,f)}d.type=f?"eip1559":"legacy"}if(i.includes("fees"))if(d.type!=="legacy"&&d.type!=="eip2930"){if(typeof d.maxFeePerGas>"u"||typeof d.maxPriorityFeePerGas>"u"){const f=await m(),{maxFeePerGas:w,maxPriorityFeePerGas:g}=await te(e,{block:f,chain:r,request:d});if(typeof t.maxPriorityFeePerGas>"u"&&t.maxFeePerGas&&t.maxFeePerGas<g)throw new ot({maxPriorityFeePerGas:g});d.maxPriorityFeePerGas=g,d.maxFeePerGas=w}}else{if(typeof t.maxFeePerGas<"u"||typeof t.maxPriorityFeePerGas<"u")throw new W;if(typeof t.gasPrice>"u"){const f=await m(),{gasPrice:w}=await te(e,{block:f,chain:r,request:d,type:"legacy"});d.gasPrice=w}}return i.includes("gas")&&typeof o>"u"&&(d.gas=await T(e,lt,"estimateGas")({...d,account:p&&{address:p.address,type:"json-rpc"}})),Q(d),delete d.parameters,d}async function ft(e,{serializedTransaction:t}){return e.request({method:"eth_sendRawTransaction",params:[t]},{retryCount:0})}const D=new Ne(128);async function ht(e,t){var f,w,g,R;const{account:a=e.account,chain:n=e.chain,accessList:r,authorizationList:o,blobs:s,data:c,gas:u,gasPrice:i,maxFeePerBlobGas:l,maxFeePerGas:p,maxPriorityFeePerGas:d,nonce:h,value:m,...b}=t;if(typeof a>"u")throw new ye({docsPath:"/docs/actions/wallet/sendTransaction"});const y=a?N(a):null;try{Q(t);const C=await(async()=>{if(t.to)return t.to;if(t.to!==null&&o&&o.length>0)return await le({authorization:o[0]}).catch(()=>{throw new F("`to` is required. Could not infer from `authorizationList`.")})})();if((y==null?void 0:y.type)==="json-rpc"||y===null){let x;n!==null&&(x=await T(e,me,"getChainId")({}),rt({currentChainId:x,chain:n}));const B=(g=(w=(f=e.chain)==null?void 0:f.formatters)==null?void 0:w.transactionRequest)==null?void 0:g.format,G=(B||ue)({...de(b,{format:B}),accessList:r,authorizationList:o,blobs:s,chainId:x,data:c,from:y==null?void 0:y.address,gas:u,gasPrice:i,maxFeePerBlobGas:l,maxFeePerGas:p,maxPriorityFeePerGas:d,nonce:h,to:C,value:m}),q=D.get(e.uid),S=q?"wallet_sendTransaction":"eth_sendTransaction";try{return await e.request({method:S,params:[G]},{retryCount:0})}catch(U){if(q===!1)throw U;const P=U;if(P.name==="InvalidInputRpcError"||P.name==="InvalidParamsRpcError"||P.name==="MethodNotFoundRpcError"||P.name==="MethodNotSupportedRpcError")return await e.request({method:"wallet_sendTransaction",params:[G]},{retryCount:0}).then(E=>(D.set(e.uid,!0),E)).catch(E=>{const k=E;throw k.name==="MethodNotFoundRpcError"||k.name==="MethodNotSupportedRpcError"?(D.set(e.uid,!1),P):k});throw P}}if((y==null?void 0:y.type)==="local"){const x=await T(e,we,"prepareTransactionRequest")({account:y,accessList:r,authorizationList:o,blobs:s,chain:n,data:c,gas:u,gasPrice:i,maxFeePerBlobGas:l,maxFeePerGas:p,maxPriorityFeePerGas:d,nonce:h,nonceManager:y.nonceManager,parameters:[...he,"sidecars"],value:m,...b,to:C}),B=(R=n==null?void 0:n.serializers)==null?void 0:R.transaction,A=await y.signTransaction(x,{serializer:B});return await T(e,ft,"sendRawTransaction")({serializedTransaction:A})}throw(y==null?void 0:y.type)==="smart"?new z({metaMessages:["Consider using the `sendUserOperation` Action instead."],docsPath:"/docs/actions/bundler/sendUserOperation",type:"smart"}):new z({docsPath:"/docs/actions/wallet/sendTransaction",type:y==null?void 0:y.type})}catch(C){throw C instanceof z?C:st(C,{...t,account:y,chain:t.chain||void 0})}}async function wt(e,t){const{abi:a,account:n=e.account,address:r,args:o,dataSuffix:s,functionName:c,...u}=t;if(typeof n>"u")throw new ye({docsPath:"/docs/contract/writeContract"});const i=n?N(n):null,l=Re({abi:a,args:o,functionName:c});try{return await T(e,ht,"sendTransaction")({data:`${l}${s?s.replace("0x",""):""}`,to:r,account:i,...u})}catch(p){throw qe(p,{abi:a,address:r,args:o,docsPath:"/docs/contract/writeContract",functionName:c,sender:i==null?void 0:i.address})}}function bt(e,t={}){const{key:a="custom",methods:n,name:r="Custom Provider",retryDelay:o}=t;return({retryCount:s})=>Se({key:a,methods:n,name:r,request:e.request.bind(e),retryCount:t.retryCount??s,retryDelay:o,type:"custom"})}async function Tt(e,t={}){let a;if(t.connector){const{connector:i}=t;if(e.state.status==="reconnecting"&&!i.getAccounts&&!i.getChainId)throw new He({connector:i});const[l,p]=await Promise.all([i.getAccounts().catch(d=>{if(t.account===null)return[];throw d}),i.getChainId()]);a={accounts:l,chainId:p,connector:i}}else a=e.state.connections.get(e.state.current);if(!a)throw new $e;const n=t.chainId??a.chainId,r=await a.connector.getChainId();if(r!==a.chainId)throw new Ue({connectionChainId:a.chainId,connectorChainId:r});const o=a.connector;if(o.getClient)return o.getClient({chainId:n});const s=N(t.account??a.accounts[0]);if(s&&(s.address=Le(s.address)),t.account&&!a.accounts.some(i=>i.toLowerCase()===s.address.toLowerCase()))throw new ze({address:s.address,connector:o});const c=e.chains.find(i=>i.id===n),u=await a.connector.getProvider({chainId:n});return De({account:s,chain:c,name:"Connector Client",transport:i=>bt(u)({...i,retryCount:0})})}function gt(e,t){const{chainId:a,...n}=t,r=e.getClient({chainId:a});return ce(r,Ke,"readContract")(n)}async function xt(e,t){const{account:a,chainId:n,connector:r,...o}=t;let s;return typeof a=="object"&&(a==null?void 0:a.type)==="local"?s=e.getClient({chainId:n}):s=await Tt(e,{account:a??void 0,chainId:n,connector:r}),await ce(s,wt,"writeContract")({...o,...a?{account:a}:{},chain:n?{id:n}:null})}function Pt(e,t={}){return{async queryFn({queryKey:a}){const n=t.abi;if(!n)throw new Error("abi is required");const{functionName:r,scopeKey:o,...s}=a[1],c=(()=>{const u=a[1];if(u.address)return{address:u.address};if(u.code)return{code:u.code};throw new Error("address or code is required")})();if(!r)throw new Error("functionName is required");return gt(e,{abi:n,functionName:r,args:s.args,...c,...s})},queryKey:Ft(t)}}function Ft(e={}){const{abi:t,...a}=e;return["readContract",Ve(a)]}function Ct(e){return{mutationFn(t){return xt(e,t)},mutationKey:["writeContract"]}}function kt(e={}){const{abi:t,address:a,functionName:n,query:r={}}=e,o=e.code,s=pe(e),c=je({config:s}),u=Pt(s,{...e,chainId:e.chainId??c}),i=!!((a||o)&&t&&n&&(r.enabled??!0));return Qe({...r,...u,enabled:i,structuralSharing:r.structuralSharing??We})}function Mt(e={}){const{mutation:t}=e,a=pe(e),n=Ct(a),{mutate:r,mutateAsync:o,...s}=Je({...t,...n});return{...s,writeContract:r,writeContractAsync:o}}const O=11155111,vt=Xe({...Y,id:11155420,name:"OP Sepolia",nativeCurrency:{name:"Sepolia Ether",symbol:"ETH",decimals:18},rpcUrls:{default:{http:["https://sepolia.optimism.io"]}},blockExplorers:{default:{name:"Blockscout",url:"https://optimism-sepolia.blockscout.com",apiUrl:"https://optimism-sepolia.blockscout.com/api"}},contracts:{...Y.contracts,disputeGameFactory:{[O]:{address:"0x05F9613aDB30026FFd634f38e5C4dFd30a197Fa1"}},l2OutputOracle:{[O]:{address:"0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F"}},multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:1620204},portal:{[O]:{address:"0x16Fc5058F25648194471939df75CF27A2fdC48BC"}},l1StandardBridge:{[O]:{address:"0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1"}}},testnet:!0,sourceId:O});function Bt(){switch("optimism"){case"sepolia":return Ye;case"optimism":return Z;case"optimismSepolia":return vt;default:return Z}}const ae=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"bytes32",name:"urlHash",type:"bytes32"},{indexed:!1,internalType:"string",name:"url",type:"string"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"LikeReceived",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"donate",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"getLikesForUrl",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"urlLikes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],re=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"bytes32",name:"urlHash",type:"bytes32"},{indexed:!1,internalType:"string",name:"url",type:"string"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"LikeReceived",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"donate",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"string",name:"_url",type:"string"}],name:"getLikesForUrl",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"urlLikes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],K=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],name:"ERC721IncorrectOwner",type:"error"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ERC721InsufficientApproval",type:"error"},{inputs:[{internalType:"address",name:"approver",type:"address"}],name:"ERC721InvalidApprover",type:"error"},{inputs:[{internalType:"address",name:"operator",type:"address"}],name:"ERC721InvalidOperator",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"ERC721InvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"ERC721InvalidReceiver",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"}],name:"ERC721InvalidSender",type:"error"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ERC721NonexistentToken",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"OwnableInvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"OwnableUnauthorizedAccount",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_fromTokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_toTokenId",type:"uint256"}],name:"BatchMetadataUpdate",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"updater",type:"address"},{indexed:!1,internalType:"string",name:"imageUrl",type:"string"}],name:"ImageUpdateRequested",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"updater",type:"address"}],name:"ImageUpdaterAuthorized",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_tokenId",type:"uint256"}],name:"MetadataUpdate",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"},{indexed:!0,internalType:"address",name:"updater",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"UpdaterPaid",type:"event"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"isImageUpdated",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"mintPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"string",name:"imageUrl",type:"string"}],name:"requestImageUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"uri",type:"string"}],name:"safeMint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newPrice",type:"uint256"}],name:"setMintPrice",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}];function At(){switch("optimism"){case"sepolia":return{address:"0xf18E3901D91D8a08380E37A466E6F7f6AA4BD4a6",abi:K};case"optimism":return{address:"0x7F8eB9F5084AfA2e389D13B9CD6E3097C485bF8D",abi:K};default:return{address:"0x7F8eB9F5084AfA2e389D13B9CD6E3097C485bF8D",abi:K}}}function Gt(){switch("optimism"){case"sepolia":return{address:"0xf137ca5dc45e3d0336ac2daa26084b0eaf244684",abi:ae};case"optimism":return{address:"0x314B07fBd33A7343479e99E6682D5Ee1da7F17c1",abi:re};case"optimismSepolia":return{address:"0x314B07fBd33A7343479e99E6682D5Ee1da7F17c1",abi:ae};default:return{address:"0x314B07fBd33A7343479e99E6682D5Ee1da7F17c1",abi:re}}}export{ut as B,Bt as a,kt as b,Gt as c,At as d,$ as g,Mt as u};
